{"ast":null,"code":"import _defineProperty from \"/Users/divya/Documents/vue-2024-spine/vue-20240spine/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureAtlas } from \"./TextureAtlas.js\";\nexport class AssetManagerBase {\n  constructor(textureLoader, pathPrefix = \"\", downloader = new Downloader()) {\n    _defineProperty(this, \"pathPrefix\", \"\");\n    _defineProperty(this, \"textureLoader\", void 0);\n    _defineProperty(this, \"downloader\", void 0);\n    _defineProperty(this, \"assets\", {});\n    _defineProperty(this, \"errors\", {});\n    _defineProperty(this, \"toLoad\", 0);\n    _defineProperty(this, \"loaded\", 0);\n    this.textureLoader = textureLoader;\n    this.pathPrefix = pathPrefix;\n    this.downloader = downloader;\n  }\n  start(path) {\n    this.toLoad++;\n    return this.pathPrefix + path;\n  }\n  success(callback, path, asset) {\n    this.toLoad--;\n    this.loaded++;\n    this.assets[path] = asset;\n    if (callback) callback(path, asset);\n  }\n  error(callback, path, message) {\n    this.toLoad--;\n    this.loaded++;\n    this.errors[path] = message;\n    if (callback) callback(path, message);\n  }\n  loadAll() {\n    let promise = new Promise((resolve, reject) => {\n      let check = () => {\n        if (this.isLoadingComplete()) {\n          if (this.hasErrors()) reject(this.errors);else resolve(this);\n          return;\n        }\n        requestAnimationFrame(check);\n      };\n      requestAnimationFrame(check);\n    });\n    return promise;\n  }\n  setRawDataURI(path, data) {\n    this.downloader.rawDataUris[this.pathPrefix + path] = data;\n  }\n  loadBinary(path, success = () => {}, error = () => {}) {\n    path = this.start(path);\n    this.downloader.downloadBinary(path, data => {\n      this.success(success, path, data);\n    }, (status, responseText) => {\n      this.error(error, path, `Couldn't load binary ${path}: status ${status}, ${responseText}`);\n    });\n  }\n  loadText(path, success = () => {}, error = () => {}) {\n    path = this.start(path);\n    this.downloader.downloadText(path, data => {\n      this.success(success, path, data);\n    }, (status, responseText) => {\n      this.error(error, path, `Couldn't load text ${path}: status ${status}, ${responseText}`);\n    });\n  }\n  loadJson(path, success = () => {}, error = () => {}) {\n    path = this.start(path);\n    this.downloader.downloadJson(path, data => {\n      this.success(success, path, data);\n    }, (status, responseText) => {\n      this.error(error, path, `Couldn't load JSON ${path}: status ${status}, ${responseText}`);\n    });\n  }\n  loadTexture(path, success = () => {}, error = () => {}) {\n    path = this.start(path);\n    let isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document);\n    let isWebWorker = !isBrowser; // && typeof importScripts !== 'undefined';\n    if (isWebWorker) {\n      fetch(path, {\n        mode: \"cors\"\n      }).then(response => {\n        if (response.ok) return response.blob();\n        this.error(error, path, `Couldn't load image: ${path}`);\n        return null;\n      }).then(blob => {\n        return blob ? createImageBitmap(blob, {\n          premultiplyAlpha: \"none\",\n          colorSpaceConversion: \"none\"\n        }) : null;\n      }).then(bitmap => {\n        if (bitmap) this.success(success, path, this.textureLoader(bitmap));\n      });\n    } else {\n      let image = new Image();\n      image.crossOrigin = \"anonymous\";\n      image.onload = () => {\n        this.success(success, path, this.textureLoader(image));\n      };\n      image.onerror = () => {\n        this.error(error, path, `Couldn't load image: ${path}`);\n      };\n      if (this.downloader.rawDataUris[path]) path = this.downloader.rawDataUris[path];\n      image.src = path;\n    }\n  }\n  loadTextureAtlas(path, success = () => {}, error = () => {}, fileAlias) {\n    let index = path.lastIndexOf(\"/\");\n    let parent = index >= 0 ? path.substring(0, index + 1) : \"\";\n    path = this.start(path);\n    this.downloader.downloadText(path, atlasText => {\n      try {\n        let atlas = new TextureAtlas(atlasText);\n        let toLoad = atlas.pages.length,\n          abort = false;\n        for (let page of atlas.pages) {\n          this.loadTexture(!fileAlias ? parent + page.name : fileAlias[page.name], (imagePath, texture) => {\n            if (!abort) {\n              page.setTexture(texture);\n              if (--toLoad == 0) this.success(success, path, atlas);\n            }\n          }, (imagePath, message) => {\n            if (!abort) this.error(error, path, `Couldn't load texture atlas ${path} page image: ${imagePath}`);\n            abort = true;\n          });\n        }\n      } catch (e) {\n        this.error(error, path, `Couldn't parse texture atlas ${path}: ${e.message}`);\n      }\n    }, (status, responseText) => {\n      this.error(error, path, `Couldn't load texture atlas ${path}: status ${status}, ${responseText}`);\n    });\n  }\n  get(path) {\n    return this.assets[this.pathPrefix + path];\n  }\n  require(path) {\n    path = this.pathPrefix + path;\n    let asset = this.assets[path];\n    if (asset) return asset;\n    let error = this.errors[path];\n    throw Error(\"Asset not found: \" + path + (error ? \"\\n\" + error : \"\"));\n  }\n  remove(path) {\n    path = this.pathPrefix + path;\n    let asset = this.assets[path];\n    if (asset.dispose) asset.dispose();\n    delete this.assets[path];\n    return asset;\n  }\n  removeAll() {\n    for (let key in this.assets) {\n      let asset = this.assets[key];\n      if (asset.dispose) asset.dispose();\n    }\n    this.assets = {};\n  }\n  isLoadingComplete() {\n    return this.toLoad == 0;\n  }\n  getToLoad() {\n    return this.toLoad;\n  }\n  getLoaded() {\n    return this.loaded;\n  }\n  dispose() {\n    this.removeAll();\n  }\n  hasErrors() {\n    return Object.keys(this.errors).length > 0;\n  }\n  getErrors() {\n    return this.errors;\n  }\n}\nexport class Downloader {\n  constructor() {\n    _defineProperty(this, \"callbacks\", {});\n    _defineProperty(this, \"rawDataUris\", {});\n  }\n  dataUriToString(dataUri) {\n    if (!dataUri.startsWith(\"data:\")) {\n      throw new Error(\"Not a data URI.\");\n    }\n    let base64Idx = dataUri.indexOf(\"base64,\");\n    if (base64Idx != -1) {\n      base64Idx += \"base64,\".length;\n      return atob(dataUri.substr(base64Idx));\n    } else {\n      return dataUri.substr(dataUri.indexOf(\",\") + 1);\n    }\n  }\n  base64ToUint8Array(base64) {\n    var binary_string = window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n      bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n  }\n  dataUriToUint8Array(dataUri) {\n    if (!dataUri.startsWith(\"data:\")) {\n      throw new Error(\"Not a data URI.\");\n    }\n    let base64Idx = dataUri.indexOf(\"base64,\");\n    if (base64Idx == -1) throw new Error(\"Not a binary data URI.\");\n    base64Idx += \"base64,\".length;\n    return this.base64ToUint8Array(dataUri.substr(base64Idx));\n  }\n  downloadText(url, success, error) {\n    if (this.start(url, success, error)) return;\n    if (this.rawDataUris[url]) {\n      try {\n        let dataUri = this.rawDataUris[url];\n        this.finish(url, 200, this.dataUriToString(dataUri));\n      } catch (e) {\n        this.finish(url, 400, JSON.stringify(e));\n      }\n      return;\n    }\n    let request = new XMLHttpRequest();\n    request.overrideMimeType(\"text/html\");\n    request.open(\"GET\", url, true);\n    let done = () => {\n      this.finish(url, request.status, request.responseText);\n    };\n    request.onload = done;\n    request.onerror = done;\n    request.send();\n  }\n  downloadJson(url, success, error) {\n    this.downloadText(url, data => {\n      success(JSON.parse(data));\n    }, error);\n  }\n  downloadBinary(url, success, error) {\n    if (this.start(url, success, error)) return;\n    if (this.rawDataUris[url]) {\n      try {\n        let dataUri = this.rawDataUris[url];\n        this.finish(url, 200, this.dataUriToUint8Array(dataUri));\n      } catch (e) {\n        this.finish(url, 400, JSON.stringify(e));\n      }\n      return;\n    }\n    let request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n    let onerror = () => {\n      this.finish(url, request.status, request.response);\n    };\n    request.onload = () => {\n      if (request.status == 200 || request.status == 0) this.finish(url, 200, new Uint8Array(request.response));else onerror();\n    };\n    request.onerror = onerror;\n    request.send();\n  }\n  start(url, success, error) {\n    let callbacks = this.callbacks[url];\n    try {\n      if (callbacks) return true;\n      this.callbacks[url] = callbacks = [];\n    } finally {\n      callbacks.push(success, error);\n    }\n  }\n  finish(url, status, data) {\n    let callbacks = this.callbacks[url];\n    delete this.callbacks[url];\n    let args = status == 200 || status == 0 ? [data] : [status, data];\n    for (let i = args.length - 1, n = callbacks.length; i < n; i += 2) callbacks[i].apply(null, args);\n  }\n}","map":{"version":3,"names":["TextureAtlas","AssetManagerBase","constructor","textureLoader","pathPrefix","downloader","Downloader","_defineProperty","start","path","toLoad","success","callback","asset","loaded","assets","error","message","errors","loadAll","promise","Promise","resolve","reject","check","isLoadingComplete","hasErrors","requestAnimationFrame","setRawDataURI","data","rawDataUris","loadBinary","downloadBinary","status","responseText","loadText","downloadText","loadJson","downloadJson","loadTexture","isBrowser","window","navigator","document","isWebWorker","fetch","mode","then","response","ok","blob","createImageBitmap","premultiplyAlpha","colorSpaceConversion","bitmap","image","Image","crossOrigin","onload","onerror","src","loadTextureAtlas","fileAlias","index","lastIndexOf","parent","substring","atlasText","atlas","pages","length","abort","page","name","imagePath","texture","setTexture","e","get","require","Error","remove","dispose","removeAll","key","getToLoad","getLoaded","Object","keys","getErrors","dataUriToString","dataUri","startsWith","base64Idx","indexOf","atob","substr","base64ToUint8Array","base64","binary_string","len","bytes","Uint8Array","i","charCodeAt","dataUriToUint8Array","url","finish","JSON","stringify","request","XMLHttpRequest","overrideMimeType","open","done","send","parse","responseType","callbacks","push","args","n","apply"],"sources":["../src/AssetManagerBase.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}