{"ast":null,"code":"class Event {\n  constructor(time, data) {\n    this.intValue = 0;\n    this.floatValue = 0;\n    this.stringValue = null;\n    this.time = 0;\n    this.volume = 0;\n    this.balance = 0;\n    if (!data) throw new Error(\"data cannot be null.\");\n    this.time = time;\n    this.data = data;\n  }\n}\nexport { Event };","map":{"version":3,"names":["Event","constructor","time","data","intValue","floatValue","stringValue","volume","balance","Error"],"sources":["../../src/core/Event.ts"],"sourcesContent":["import type { EventData } from './EventData';\nimport type { IEvent } from '@pixi-spine/base';\n\n/** Stores the current pose values for an {@link Event}.\n *\n * See Timeline {@link Timeline#apply()},\n * AnimationStateListener {@link AnimationStateListener#event()}, and\n * [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide.\n * @public\n * */\nexport class Event implements IEvent {\n    data: EventData;\n    intValue = 0;\n    floatValue = 0;\n    stringValue: string | null = null;\n    time = 0;\n    volume = 0;\n    balance = 0;\n\n    constructor(time: number, data: EventData) {\n        if (!data) throw new Error('data cannot be null.');\n        this.time = time;\n        this.data = data;\n    }\n}\n"],"mappings":"AAUO,MAAMA,KAAwB;EASjCC,YAAYC,IAAA,EAAcC,IAAiB;IAPhC,KAAAC,QAAA;IACE,KAAAC,UAAA;IACgB,KAAAC,WAAA;IACtB,KAAAJ,IAAA;IACE,KAAAK,MAAA;IACC,KAAAC,OAAA;IAGN,IAAI,CAACL,IAAA,EAAY,UAAIM,KAAA,CAAM,sBAAsB;IACjD,KAAKP,IAAO,GAAAA,IAAA;IACZ,KAAKC,IAAO,GAAAA,IAAA;EAAA;AAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}