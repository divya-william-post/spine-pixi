{"ast":null,"code":"import _defineProperty from \"/Users/divya/Documents/vue-2024-spine/vue-20240spine/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Triangulator } from \"./Triangulator.js\";\nimport { Utils } from \"./Utils.js\";\nexport class SkeletonClipping {\n  constructor() {\n    _defineProperty(this, \"triangulator\", new Triangulator());\n    _defineProperty(this, \"clippingPolygon\", new Array());\n    _defineProperty(this, \"clipOutput\", new Array());\n    _defineProperty(this, \"clippedVertices\", new Array());\n    _defineProperty(this, \"clippedTriangles\", new Array());\n    _defineProperty(this, \"scratch\", new Array());\n    _defineProperty(this, \"clipAttachment\", null);\n    _defineProperty(this, \"clippingPolygons\", null);\n  }\n  clipStart(slot, clip) {\n    if (this.clipAttachment) return 0;\n    this.clipAttachment = clip;\n    let n = clip.worldVerticesLength;\n    let vertices = Utils.setArraySize(this.clippingPolygon, n);\n    clip.computeWorldVertices(slot, 0, n, vertices, 0, 2);\n    let clippingPolygon = this.clippingPolygon;\n    SkeletonClipping.makeClockwise(clippingPolygon);\n    let clippingPolygons = this.clippingPolygons = this.triangulator.decompose(clippingPolygon, this.triangulator.triangulate(clippingPolygon));\n    for (let i = 0, n = clippingPolygons.length; i < n; i++) {\n      let polygon = clippingPolygons[i];\n      SkeletonClipping.makeClockwise(polygon);\n      polygon.push(polygon[0]);\n      polygon.push(polygon[1]);\n    }\n    return clippingPolygons.length;\n  }\n  clipEndWithSlot(slot) {\n    if (this.clipAttachment && this.clipAttachment.endSlot == slot.data) this.clipEnd();\n  }\n  clipEnd() {\n    if (!this.clipAttachment) return;\n    this.clipAttachment = null;\n    this.clippingPolygons = null;\n    this.clippedVertices.length = 0;\n    this.clippedTriangles.length = 0;\n    this.clippingPolygon.length = 0;\n  }\n  isClipping() {\n    return this.clipAttachment != null;\n  }\n  clipTriangles(vertices, verticesLength, triangles, trianglesLength, uvs, light, dark, twoColor) {\n    let clipOutput = this.clipOutput,\n      clippedVertices = this.clippedVertices;\n    let clippedTriangles = this.clippedTriangles;\n    let polygons = this.clippingPolygons;\n    let polygonsCount = polygons.length;\n    let vertexSize = twoColor ? 12 : 8;\n    let index = 0;\n    clippedVertices.length = 0;\n    clippedTriangles.length = 0;\n    outer: for (let i = 0; i < trianglesLength; i += 3) {\n      let vertexOffset = triangles[i] << 1;\n      let x1 = vertices[vertexOffset],\n        y1 = vertices[vertexOffset + 1];\n      let u1 = uvs[vertexOffset],\n        v1 = uvs[vertexOffset + 1];\n      vertexOffset = triangles[i + 1] << 1;\n      let x2 = vertices[vertexOffset],\n        y2 = vertices[vertexOffset + 1];\n      let u2 = uvs[vertexOffset],\n        v2 = uvs[vertexOffset + 1];\n      vertexOffset = triangles[i + 2] << 1;\n      let x3 = vertices[vertexOffset],\n        y3 = vertices[vertexOffset + 1];\n      let u3 = uvs[vertexOffset],\n        v3 = uvs[vertexOffset + 1];\n      for (let p = 0; p < polygonsCount; p++) {\n        let s = clippedVertices.length;\n        if (this.clip(x1, y1, x2, y2, x3, y3, polygons[p], clipOutput)) {\n          let clipOutputLength = clipOutput.length;\n          if (clipOutputLength == 0) continue;\n          let d0 = y2 - y3,\n            d1 = x3 - x2,\n            d2 = x1 - x3,\n            d4 = y3 - y1;\n          let d = 1 / (d0 * d2 + d1 * (y1 - y3));\n          let clipOutputCount = clipOutputLength >> 1;\n          let clipOutputItems = this.clipOutput;\n          let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + clipOutputCount * vertexSize);\n          for (let ii = 0; ii < clipOutputLength; ii += 2) {\n            let x = clipOutputItems[ii],\n              y = clipOutputItems[ii + 1];\n            clippedVerticesItems[s] = x;\n            clippedVerticesItems[s + 1] = y;\n            clippedVerticesItems[s + 2] = light.r;\n            clippedVerticesItems[s + 3] = light.g;\n            clippedVerticesItems[s + 4] = light.b;\n            clippedVerticesItems[s + 5] = light.a;\n            let c0 = x - x3,\n              c1 = y - y3;\n            let a = (d0 * c0 + d1 * c1) * d;\n            let b = (d4 * c0 + d2 * c1) * d;\n            let c = 1 - a - b;\n            clippedVerticesItems[s + 6] = u1 * a + u2 * b + u3 * c;\n            clippedVerticesItems[s + 7] = v1 * a + v2 * b + v3 * c;\n            if (twoColor) {\n              clippedVerticesItems[s + 8] = dark.r;\n              clippedVerticesItems[s + 9] = dark.g;\n              clippedVerticesItems[s + 10] = dark.b;\n              clippedVerticesItems[s + 11] = dark.a;\n            }\n            s += vertexSize;\n          }\n          s = clippedTriangles.length;\n          let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3 * (clipOutputCount - 2));\n          clipOutputCount--;\n          for (let ii = 1; ii < clipOutputCount; ii++) {\n            clippedTrianglesItems[s] = index;\n            clippedTrianglesItems[s + 1] = index + ii;\n            clippedTrianglesItems[s + 2] = index + ii + 1;\n            s += 3;\n          }\n          index += clipOutputCount + 1;\n        } else {\n          let clippedVerticesItems = Utils.setArraySize(clippedVertices, s + 3 * vertexSize);\n          clippedVerticesItems[s] = x1;\n          clippedVerticesItems[s + 1] = y1;\n          clippedVerticesItems[s + 2] = light.r;\n          clippedVerticesItems[s + 3] = light.g;\n          clippedVerticesItems[s + 4] = light.b;\n          clippedVerticesItems[s + 5] = light.a;\n          if (!twoColor) {\n            clippedVerticesItems[s + 6] = u1;\n            clippedVerticesItems[s + 7] = v1;\n            clippedVerticesItems[s + 8] = x2;\n            clippedVerticesItems[s + 9] = y2;\n            clippedVerticesItems[s + 10] = light.r;\n            clippedVerticesItems[s + 11] = light.g;\n            clippedVerticesItems[s + 12] = light.b;\n            clippedVerticesItems[s + 13] = light.a;\n            clippedVerticesItems[s + 14] = u2;\n            clippedVerticesItems[s + 15] = v2;\n            clippedVerticesItems[s + 16] = x3;\n            clippedVerticesItems[s + 17] = y3;\n            clippedVerticesItems[s + 18] = light.r;\n            clippedVerticesItems[s + 19] = light.g;\n            clippedVerticesItems[s + 20] = light.b;\n            clippedVerticesItems[s + 21] = light.a;\n            clippedVerticesItems[s + 22] = u3;\n            clippedVerticesItems[s + 23] = v3;\n          } else {\n            clippedVerticesItems[s + 6] = u1;\n            clippedVerticesItems[s + 7] = v1;\n            clippedVerticesItems[s + 8] = dark.r;\n            clippedVerticesItems[s + 9] = dark.g;\n            clippedVerticesItems[s + 10] = dark.b;\n            clippedVerticesItems[s + 11] = dark.a;\n            clippedVerticesItems[s + 12] = x2;\n            clippedVerticesItems[s + 13] = y2;\n            clippedVerticesItems[s + 14] = light.r;\n            clippedVerticesItems[s + 15] = light.g;\n            clippedVerticesItems[s + 16] = light.b;\n            clippedVerticesItems[s + 17] = light.a;\n            clippedVerticesItems[s + 18] = u2;\n            clippedVerticesItems[s + 19] = v2;\n            clippedVerticesItems[s + 20] = dark.r;\n            clippedVerticesItems[s + 21] = dark.g;\n            clippedVerticesItems[s + 22] = dark.b;\n            clippedVerticesItems[s + 23] = dark.a;\n            clippedVerticesItems[s + 24] = x3;\n            clippedVerticesItems[s + 25] = y3;\n            clippedVerticesItems[s + 26] = light.r;\n            clippedVerticesItems[s + 27] = light.g;\n            clippedVerticesItems[s + 28] = light.b;\n            clippedVerticesItems[s + 29] = light.a;\n            clippedVerticesItems[s + 30] = u3;\n            clippedVerticesItems[s + 31] = v3;\n            clippedVerticesItems[s + 32] = dark.r;\n            clippedVerticesItems[s + 33] = dark.g;\n            clippedVerticesItems[s + 34] = dark.b;\n            clippedVerticesItems[s + 35] = dark.a;\n          }\n          s = clippedTriangles.length;\n          let clippedTrianglesItems = Utils.setArraySize(clippedTriangles, s + 3);\n          clippedTrianglesItems[s] = index;\n          clippedTrianglesItems[s + 1] = index + 1;\n          clippedTrianglesItems[s + 2] = index + 2;\n          index += 3;\n          continue outer;\n        }\n      }\n    }\n  }\n  /** Clips the input triangle against the convex, clockwise clipping area. If the triangle lies entirely within the clipping\n   * area, false is returned. The clipping area must duplicate the first vertex at the end of the vertices list. */\n  clip(x1, y1, x2, y2, x3, y3, clippingArea, output) {\n    let originalOutput = output;\n    let clipped = false;\n    // Avoid copy at the end.\n    let input;\n    if (clippingArea.length % 4 >= 2) {\n      input = output;\n      output = this.scratch;\n    } else input = this.scratch;\n    input.length = 0;\n    input.push(x1);\n    input.push(y1);\n    input.push(x2);\n    input.push(y2);\n    input.push(x3);\n    input.push(y3);\n    input.push(x1);\n    input.push(y1);\n    output.length = 0;\n    let clippingVertices = clippingArea;\n    let clippingVerticesLast = clippingArea.length - 4;\n    for (let i = 0;; i += 2) {\n      let edgeX = clippingVertices[i],\n        edgeY = clippingVertices[i + 1];\n      let edgeX2 = clippingVertices[i + 2],\n        edgeY2 = clippingVertices[i + 3];\n      let deltaX = edgeX - edgeX2,\n        deltaY = edgeY - edgeY2;\n      let inputVertices = input;\n      let inputVerticesLength = input.length - 2,\n        outputStart = output.length;\n      for (let ii = 0; ii < inputVerticesLength; ii += 2) {\n        let inputX = inputVertices[ii],\n          inputY = inputVertices[ii + 1];\n        let inputX2 = inputVertices[ii + 2],\n          inputY2 = inputVertices[ii + 3];\n        let side2 = deltaX * (inputY2 - edgeY2) - deltaY * (inputX2 - edgeX2) > 0;\n        if (deltaX * (inputY - edgeY2) - deltaY * (inputX - edgeX2) > 0) {\n          if (side2) {\n            // v1 inside, v2 inside\n            output.push(inputX2);\n            output.push(inputY2);\n            continue;\n          }\n          // v1 inside, v2 outside\n          let c0 = inputY2 - inputY,\n            c2 = inputX2 - inputX;\n          let s = c0 * (edgeX2 - edgeX) - c2 * (edgeY2 - edgeY);\n          if (Math.abs(s) > 0.000001) {\n            let ua = (c2 * (edgeY - inputY) - c0 * (edgeX - inputX)) / s;\n            output.push(edgeX + (edgeX2 - edgeX) * ua);\n            output.push(edgeY + (edgeY2 - edgeY) * ua);\n          } else {\n            output.push(edgeX);\n            output.push(edgeY);\n          }\n        } else if (side2) {\n          // v1 outside, v2 inside\n          let c0 = inputY2 - inputY,\n            c2 = inputX2 - inputX;\n          let s = c0 * (edgeX2 - edgeX) - c2 * (edgeY2 - edgeY);\n          if (Math.abs(s) > 0.000001) {\n            let ua = (c2 * (edgeY - inputY) - c0 * (edgeX - inputX)) / s;\n            output.push(edgeX + (edgeX2 - edgeX) * ua);\n            output.push(edgeY + (edgeY2 - edgeY) * ua);\n          } else {\n            output.push(edgeX);\n            output.push(edgeY);\n          }\n          output.push(inputX2);\n          output.push(inputY2);\n        }\n        clipped = true;\n      }\n      if (outputStart == output.length) {\n        // All edges outside.\n        originalOutput.length = 0;\n        return true;\n      }\n      output.push(output[0]);\n      output.push(output[1]);\n      if (i == clippingVerticesLast) break;\n      let temp = output;\n      output = input;\n      output.length = 0;\n      input = temp;\n    }\n    if (originalOutput != output) {\n      originalOutput.length = 0;\n      for (let i = 0, n = output.length - 2; i < n; i++) originalOutput[i] = output[i];\n    } else originalOutput.length = originalOutput.length - 2;\n    return clipped;\n  }\n  static makeClockwise(polygon) {\n    let vertices = polygon;\n    let verticeslength = polygon.length;\n    let area = vertices[verticeslength - 2] * vertices[1] - vertices[0] * vertices[verticeslength - 1],\n      p1x = 0,\n      p1y = 0,\n      p2x = 0,\n      p2y = 0;\n    for (let i = 0, n = verticeslength - 3; i < n; i += 2) {\n      p1x = vertices[i];\n      p1y = vertices[i + 1];\n      p2x = vertices[i + 2];\n      p2y = vertices[i + 3];\n      area += p1x * p2y - p2x * p1y;\n    }\n    if (area < 0) return;\n    for (let i = 0, lastX = verticeslength - 2, n = verticeslength >> 1; i < n; i += 2) {\n      let x = vertices[i],\n        y = vertices[i + 1];\n      let other = lastX - i;\n      vertices[i] = vertices[other];\n      vertices[i + 1] = vertices[other + 1];\n      vertices[other] = x;\n      vertices[other + 1] = y;\n    }\n  }\n}","map":{"version":3,"names":["Triangulator","Utils","SkeletonClipping","constructor","_defineProperty","Array","clipStart","slot","clip","clipAttachment","n","worldVerticesLength","vertices","setArraySize","clippingPolygon","computeWorldVertices","makeClockwise","clippingPolygons","triangulator","decompose","triangulate","i","length","polygon","push","clipEndWithSlot","endSlot","data","clipEnd","clippedVertices","clippedTriangles","isClipping","clipTriangles","verticesLength","triangles","trianglesLength","uvs","light","dark","twoColor","clipOutput","polygons","polygonsCount","vertexSize","index","outer","vertexOffset","x1","y1","u1","v1","x2","y2","u2","v2","x3","y3","u3","v3","p","s","clipOutputLength","d0","d1","d2","d4","d","clipOutputCount","clipOutputItems","clippedVerticesItems","ii","x","y","r","g","b","a","c0","c1","c","clippedTrianglesItems","clippingArea","output","originalOutput","clipped","input","scratch","clippingVertices","clippingVerticesLast","edgeX","edgeY","edgeX2","edgeY2","deltaX","deltaY","inputVertices","inputVerticesLength","outputStart","inputX","inputY","inputX2","inputY2","side2","c2","Math","abs","ua","temp","verticeslength","area","p1x","p1y","p2x","p2y","lastX","other"],"sources":["../src/SkeletonClipping.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}