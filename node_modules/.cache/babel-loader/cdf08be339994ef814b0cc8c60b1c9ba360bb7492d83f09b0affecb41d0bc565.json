{"ast":null,"code":"import _defineProperty from \"/Users/divya/Documents/vue-2024-spine/vue-20240spine/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureAtlasRegion } from \"../TextureAtlas.js\";\nimport { Color, Utils } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment that displays a textured mesh. A mesh has hull vertices and internal vertices within the hull. Holes are not\n * supported. Each vertex has UVs (texture coordinates) and triangles are used to map an image on to the mesh.\n *\n * See [Mesh attachments](http://esotericsoftware.com/spine-meshes) in the Spine User Guide. */\nexport class MeshAttachment extends VertexAttachment {\n  constructor(name, path) {\n    super(name);\n    _defineProperty(this, \"region\", null);\n    /** The name of the texture region for this attachment. */\n    _defineProperty(this, \"path\", void 0);\n    /** The UV pair for each vertex, normalized within the texture region. */\n    _defineProperty(this, \"regionUVs\", []);\n    /** The UV pair for each vertex, normalized within the entire texture.\n     *\n     * See {@link #updateUVs}. */\n    _defineProperty(this, \"uvs\", []);\n    /** Triplets of vertex indices which describe the mesh's triangulation. */\n    _defineProperty(this, \"triangles\", []);\n    /** The color to tint the mesh. */\n    _defineProperty(this, \"color\", new Color(1, 1, 1, 1));\n    /** The width of the mesh's image. Available only when nonessential data was exported. */\n    _defineProperty(this, \"width\", 0);\n    /** The height of the mesh's image. Available only when nonessential data was exported. */\n    _defineProperty(this, \"height\", 0);\n    /** The number of entries at the beginning of {@link #vertices} that make up the mesh hull. */\n    _defineProperty(this, \"hullLength\", 0);\n    /** Vertex index pairs describing edges for controling triangulation. Mesh triangles will never cross edges. Only available if\n     * nonessential data was exported. Triangulation is not performed at runtime. */\n    _defineProperty(this, \"edges\", []);\n    _defineProperty(this, \"parentMesh\", null);\n    _defineProperty(this, \"sequence\", null);\n    _defineProperty(this, \"tempColor\", new Color(0, 0, 0, 0));\n    this.path = path;\n  }\n  /** Calculates {@link #uvs} using the {@link #regionUVs} and region. Must be called if the region, the region's properties, or\n   * the {@link #regionUVs} are changed. */\n  updateRegion() {\n    if (!this.region) throw new Error(\"Region not set.\");\n    let regionUVs = this.regionUVs;\n    if (!this.uvs || this.uvs.length != regionUVs.length) this.uvs = Utils.newFloatArray(regionUVs.length);\n    let uvs = this.uvs;\n    let n = this.uvs.length;\n    let u = this.region.u,\n      v = this.region.v,\n      width = 0,\n      height = 0;\n    if (this.region instanceof TextureAtlasRegion) {\n      let region = this.region,\n        image = region.page.texture.getImage();\n      let textureWidth = image.width,\n        textureHeight = image.height;\n      switch (region.degrees) {\n        case 90:\n          u -= (region.originalHeight - region.offsetY - region.height) / textureWidth;\n          v -= (region.originalWidth - region.offsetX - region.width) / textureHeight;\n          width = region.originalHeight / textureWidth;\n          height = region.originalWidth / textureHeight;\n          for (let i = 0; i < n; i += 2) {\n            uvs[i] = u + regionUVs[i + 1] * width;\n            uvs[i + 1] = v + (1 - regionUVs[i]) * height;\n          }\n          return;\n        case 180:\n          u -= (region.originalWidth - region.offsetX - region.width) / textureWidth;\n          v -= region.offsetY / textureHeight;\n          width = region.originalWidth / textureWidth;\n          height = region.originalHeight / textureHeight;\n          for (let i = 0; i < n; i += 2) {\n            uvs[i] = u + (1 - regionUVs[i]) * width;\n            uvs[i + 1] = v + (1 - regionUVs[i + 1]) * height;\n          }\n          return;\n        case 270:\n          u -= region.offsetY / textureWidth;\n          v -= region.offsetX / textureHeight;\n          width = region.originalHeight / textureWidth;\n          height = region.originalWidth / textureHeight;\n          for (let i = 0; i < n; i += 2) {\n            uvs[i] = u + (1 - regionUVs[i + 1]) * width;\n            uvs[i + 1] = v + regionUVs[i] * height;\n          }\n          return;\n      }\n      u -= region.offsetX / textureWidth;\n      v -= (region.originalHeight - region.offsetY - region.height) / textureHeight;\n      width = region.originalWidth / textureWidth;\n      height = region.originalHeight / textureHeight;\n    } else if (!this.region) {\n      u = v = 0;\n      width = height = 1;\n    } else {\n      width = this.region.u2 - u;\n      height = this.region.v2 - v;\n    }\n    for (let i = 0; i < n; i += 2) {\n      uvs[i] = u + regionUVs[i] * width;\n      uvs[i + 1] = v + regionUVs[i + 1] * height;\n    }\n  }\n  /** The parent mesh if this is a linked mesh, else null. A linked mesh shares the {@link #bones}, {@link #vertices},\n   * {@link #regionUVs}, {@link #triangles}, {@link #hullLength}, {@link #edges}, {@link #width}, and {@link #height} with the\n   * parent mesh, but may have a different {@link #name} or {@link #path} (and therefore a different texture). */\n  getParentMesh() {\n    return this.parentMesh;\n  }\n  /** @param parentMesh May be null. */\n  setParentMesh(parentMesh) {\n    this.parentMesh = parentMesh;\n    if (parentMesh) {\n      this.bones = parentMesh.bones;\n      this.vertices = parentMesh.vertices;\n      this.worldVerticesLength = parentMesh.worldVerticesLength;\n      this.regionUVs = parentMesh.regionUVs;\n      this.triangles = parentMesh.triangles;\n      this.hullLength = parentMesh.hullLength;\n      this.worldVerticesLength = parentMesh.worldVerticesLength;\n    }\n  }\n  copy() {\n    if (this.parentMesh) return this.newLinkedMesh();\n    let copy = new MeshAttachment(this.name, this.path);\n    copy.region = this.region;\n    copy.color.setFromColor(this.color);\n    this.copyTo(copy);\n    copy.regionUVs = new Array(this.regionUVs.length);\n    Utils.arrayCopy(this.regionUVs, 0, copy.regionUVs, 0, this.regionUVs.length);\n    copy.uvs = new Array(this.uvs.length);\n    Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, this.uvs.length);\n    copy.triangles = new Array(this.triangles.length);\n    Utils.arrayCopy(this.triangles, 0, copy.triangles, 0, this.triangles.length);\n    copy.hullLength = this.hullLength;\n    copy.sequence = this.sequence != null ? this.sequence.copy() : null;\n    // Nonessential.\n    if (this.edges) {\n      copy.edges = new Array(this.edges.length);\n      Utils.arrayCopy(this.edges, 0, copy.edges, 0, this.edges.length);\n    }\n    copy.width = this.width;\n    copy.height = this.height;\n    return copy;\n  }\n  computeWorldVertices(slot, start, count, worldVertices, offset, stride) {\n    if (this.sequence != null) this.sequence.apply(slot, this);\n    super.computeWorldVertices(slot, start, count, worldVertices, offset, stride);\n  }\n  /** Returns a new mesh with the {@link #parentMesh} set to this mesh's parent mesh, if any, else to this mesh. **/\n  newLinkedMesh() {\n    let copy = new MeshAttachment(this.name, this.path);\n    copy.region = this.region;\n    copy.color.setFromColor(this.color);\n    copy.timelineAttachment = this.timelineAttachment;\n    copy.setParentMesh(this.parentMesh ? this.parentMesh : this);\n    if (copy.region != null) copy.updateRegion();\n    return copy;\n  }\n}","map":{"version":3,"names":["TextureAtlasRegion","Color","Utils","VertexAttachment","MeshAttachment","constructor","name","path","_defineProperty","updateRegion","region","Error","regionUVs","uvs","length","newFloatArray","n","u","v","width","height","image","page","texture","getImage","textureWidth","textureHeight","degrees","originalHeight","offsetY","originalWidth","offsetX","i","u2","v2","getParentMesh","parentMesh","setParentMesh","bones","vertices","worldVerticesLength","triangles","hullLength","copy","newLinkedMesh","color","setFromColor","copyTo","Array","arrayCopy","sequence","edges","computeWorldVertices","slot","start","count","worldVertices","offset","stride","apply","timelineAttachment"],"sources":["../../src/attachments/MeshAttachment.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}