{"ast":null,"code":"/* eslint-disable */\nexport async function initSpine() {\n  var app = new PIXI.Application();\n  await app.init({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    resolution: window.devicePixelRatio || 1,\n    autoDensity: true,\n    resizeTo: window,\n    backgroundColor: 0x2c3e50,\n    hello: true\n  });\n  document.body.appendChild(app.view);\n\n  // Load Spineboy assets\n  PIXI.Assets.add({\n    alias: \"spineboyData\",\n    src: \"./spineboy-pro.skel\"\n  });\n  PIXI.Assets.add({\n    alias: \"spineboyAtlas\",\n    src: \"./spineboy-pma.atlas\"\n  });\n  await PIXI.Assets.load([\"spineboyData\", \"spineboyAtlas\"]);\n  const spineboy = spine.Spine.from({\n    skeleton: \"spineboyData\",\n    atlas: \"spineboyAtlas\",\n    scale: 0.5\n  });\n  spineboy.state.data.defaultMix = 0.2;\n  spineboy.x = window.innerWidth / 2;\n  spineboy.y = window.innerHeight / 2 + spineboy.getBounds().height / 2;\n  spineboy.state.setAnimation(0, \"walk\", true);\n  app.stage.addChild(spineboy);\n\n  // Make spineboy interactive and add controls\n  let moveLeft = false,\n    moveRight = false,\n    speed = 5;\n  spineboy.beforeUpdateWorldTransforms = () => {\n    for (let {\n      bone,\n      control\n    } of controlBones) {\n      point.x = control.x;\n      point.y = control.y;\n      spineboy.pixiWorldCoordinatesToBone(point, bone);\n      bone.x = point.x;\n      bone.y = point.y;\n    }\n  };\n  window.addEventListener(\"keydown\", onKeyDown);\n  window.addEventListener(\"keyup\", onKeyUp);\n  function onKeyDown(key) {\n    spineboy.state.setAnimation(0, \"walk\", true);\n    if (key.code === \"ArrowLeft\" || key.code === \"KeyA\") {\n      moveLeft = true;\n      spineboy.skeleton.scaleX = -1;\n    } else if (key.code === \"ArrowRight\" || key.code === \"KeyD\") {\n      moveRight = true;\n      spineboy.skeleton.scaleX = 1;\n    }\n  }\n  function onKeyUp(key) {\n    if (key.code === \"ArrowLeft\" || key.code === \"KeyA\") {\n      moveLeft = false;\n    } else if (key.code === \"ArrowRight\" || key.code === \"KeyD\") {\n      moveRight = false;\n    }\n  }\n\n  // Load Sack assets\n  PIXI.Assets.add({\n    alias: \"sackData\",\n    src: \"./sack-pro.skel\"\n  });\n  PIXI.Assets.add({\n    alias: \"sackAtlas\",\n    src: \"./sack-pma.atlas\"\n  });\n  await PIXI.Assets.load([\"sackData\", \"sackAtlas\"]);\n  const sack = spine.Spine.from({\n    skeleton: \"sackData\",\n    atlas: \"sackAtlas\",\n    scale: 0.2\n  });\n  sack.state.setAnimation(0, \"walk\", true);\n  sack.x = spineboy.x - 100; // Start the sack slightly behind Spineboy\n  sack.y = spineboy.y;\n  app.stage.addChild(sack);\n  let sackFollowDistance = 100; // Adjust the distance the sack should follow behind Spineboy\n  let easing = 0.05; // Easing factor for smoother following\n\n  // Update the application to move Spineboy and sack if input is detected\n  app.ticker.add(() => {\n    if (moveLeft) {\n      spineboy.x -= speed;\n    }\n    if (moveRight) {\n      spineboy.x += speed;\n    }\n\n    // Update the sack's position to follow Spineboy with a delay\n    let targetX = spineboy.x - (spineboy.skeleton.scaleX === 1 ? sackFollowDistance : -sackFollowDistance);\n    sack.x += (targetX - sack.x) * easing;\n    sack.y += (spineboy.y - sack.y) * easing;\n  });\n\n  // Optional: Make the sack fall out and then start following again\n  function fallBackAndFollow() {\n    sack.state.setAnimation(0, \"fall\", false); // Play fall animation\n    setTimeout(() => {\n      sack.state.setAnimation(0, \"walk\", true); // Resume walking\n    }, 1000); // Delay before resuming walking\n  }\n\n  // Simulate the sack falling when Spineboy turns\n  function onTurn() {\n    if (moveLeft || moveRight) {\n      fallBackAndFollow(); // Trigger fall when Spineboy turns\n    }\n  }\n  app.ticker.add(onTurn);\n}","map":{"version":3,"names":["initSpine","app","PIXI","Application","init","width","window","innerWidth","height","innerHeight","resolution","devicePixelRatio","autoDensity","resizeTo","backgroundColor","hello","document","body","appendChild","view","Assets","add","alias","src","load","spineboy","spine","Spine","from","skeleton","atlas","scale","state","data","defaultMix","x","y","getBounds","setAnimation","stage","addChild","moveLeft","moveRight","speed","beforeUpdateWorldTransforms","bone","control","controlBones","point","pixiWorldCoordinatesToBone","addEventListener","onKeyDown","onKeyUp","key","code","scaleX","sack","sackFollowDistance","easing","ticker","targetX","fallBackAndFollow","setTimeout","onTurn"],"sources":["/Users/divya/Documents/vue-2024-spine/vue-20240spine/src/spine.js"],"sourcesContent":["/* eslint-disable */\nexport async function initSpine () {\n    var app = new PIXI.Application();\n    await app.init({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        resolution: window.devicePixelRatio || 1,\n        autoDensity: true,\n        resizeTo: window,\n        backgroundColor: 0x2c3e50,\n        hello: true,\n    });\n    document.body.appendChild(app.view);\n\n    // Load Spineboy assets\n    PIXI.Assets.add({ alias: \"spineboyData\", src: \"./spineboy-pro.skel\" });\n    PIXI.Assets.add({ alias: \"spineboyAtlas\", src: \"./spineboy-pma.atlas\" });\n    await PIXI.Assets.load([\"spineboyData\", \"spineboyAtlas\"]);\n\n    const spineboy = spine.Spine.from({ skeleton: \"spineboyData\", atlas: \"spineboyAtlas\", scale: 0.5 });\n    spineboy.state.data.defaultMix = 0.2;\n    spineboy.x = window.innerWidth / 2;\n    spineboy.y = window.innerHeight / 2 + spineboy.getBounds().height / 2;\n    spineboy.state.setAnimation(0, \"walk\", true);\n    app.stage.addChild(spineboy);\n\n    // Make spineboy interactive and add controls\n    let moveLeft = false, moveRight = false, speed = 5;\n    spineboy.beforeUpdateWorldTransforms = () => {\n        for (let { bone, control } of controlBones) {\n            point.x = control.x;\n            point.y = control.y;\n            spineboy.pixiWorldCoordinatesToBone(point, bone);\n            bone.x = point.x;\n            bone.y = point.y;\n        }\n    };\n    window.addEventListener(\"keydown\", onKeyDown);\n    window.addEventListener(\"keyup\", onKeyUp);\n    function onKeyDown(key) {\n        spineboy.state.setAnimation(0, \"walk\", true);\n        if (key.code === \"ArrowLeft\" || key.code === \"KeyA\") {\n            moveLeft = true;\n            spineboy.skeleton.scaleX = -1;\n        } else if (key.code === \"ArrowRight\" || key.code === \"KeyD\") {\n            moveRight = true;\n            spineboy.skeleton.scaleX = 1;\n        }\n    }\n    function onKeyUp(key) {\n        if (key.code === \"ArrowLeft\" || key.code === \"KeyA\") {\n            moveLeft = false;\n        } else if (key.code === \"ArrowRight\" || key.code === \"KeyD\") {\n            moveRight = false;\n        }\n    }\n\n    // Load Sack assets\n    PIXI.Assets.add({ alias: \"sackData\", src: \"./sack-pro.skel\" });\n    PIXI.Assets.add({ alias: \"sackAtlas\", src: \"./sack-pma.atlas\" });\n    await PIXI.Assets.load([\"sackData\", \"sackAtlas\"]);\n\n    const sack = spine.Spine.from({ skeleton: \"sackData\", atlas: \"sackAtlas\", scale: 0.2 });\n    sack.state.setAnimation(0, \"walk\", true);\n    sack.x = spineboy.x - 100; // Start the sack slightly behind Spineboy\n    sack.y = spineboy.y;\n    app.stage.addChild(sack);\n\n    let sackFollowDistance = 100; // Adjust the distance the sack should follow behind Spineboy\n    let easing = 0.05; // Easing factor for smoother following\n\n    // Update the application to move Spineboy and sack if input is detected\n    app.ticker.add(() => {\n        if (moveLeft) {\n            spineboy.x -= speed;\n        }\n        if (moveRight) {\n            spineboy.x += speed;\n        }\n\n        // Update the sack's position to follow Spineboy with a delay\n        let targetX = spineboy.x - (spineboy.skeleton.scaleX === 1 ? sackFollowDistance : -sackFollowDistance);\n        sack.x += (targetX - sack.x) * easing;\n        sack.y += (spineboy.y - sack.y) * easing;\n    });\n\n    // Optional: Make the sack fall out and then start following again\n    function fallBackAndFollow() {\n        sack.state.setAnimation(0, \"fall\", false); // Play fall animation\n        setTimeout(() => {\n            sack.state.setAnimation(0, \"walk\", true); // Resume walking\n        }, 1000); // Delay before resuming walking\n    }\n\n    // Simulate the sack falling when Spineboy turns\n    function onTurn() {\n        if (moveLeft || moveRight) {\n            fallBackAndFollow(); // Trigger fall when Spineboy turns\n        }\n    }\n\n    app.ticker.add(onTurn);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}