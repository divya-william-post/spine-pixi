{"ast":null,"code":"import _defineProperty from \"/Users/divya/Documents/vue-2024-spine/vue-20240spine/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TextureFilter, TextureWrap, TextureRegion } from \"./Texture.js\";\nimport { Utils } from \"./Utils.js\";\nexport class TextureAtlas {\n  constructor(atlasText) {\n    _defineProperty(this, \"pages\", new Array());\n    _defineProperty(this, \"regions\", new Array());\n    let reader = new TextureAtlasReader(atlasText);\n    let entry = new Array(4);\n    let pageFields = {};\n    pageFields[\"size\"] = page => {\n      page.width = parseInt(entry[1]);\n      page.height = parseInt(entry[2]);\n    };\n    pageFields[\"format\"] = () => {\n      // page.format = Format[tuple[0]]; we don't need format in WebGL\n    };\n    pageFields[\"filter\"] = page => {\n      page.minFilter = Utils.enumValue(TextureFilter, entry[1]);\n      page.magFilter = Utils.enumValue(TextureFilter, entry[2]);\n    };\n    pageFields[\"repeat\"] = page => {\n      if (entry[1].indexOf('x') != -1) page.uWrap = TextureWrap.Repeat;\n      if (entry[1].indexOf('y') != -1) page.vWrap = TextureWrap.Repeat;\n    };\n    pageFields[\"pma\"] = page => {\n      page.pma = entry[1] == \"true\";\n    };\n    var regionFields = {};\n    regionFields[\"xy\"] = region => {\n      region.x = parseInt(entry[1]);\n      region.y = parseInt(entry[2]);\n    };\n    regionFields[\"size\"] = region => {\n      region.width = parseInt(entry[1]);\n      region.height = parseInt(entry[2]);\n    };\n    regionFields[\"bounds\"] = region => {\n      region.x = parseInt(entry[1]);\n      region.y = parseInt(entry[2]);\n      region.width = parseInt(entry[3]);\n      region.height = parseInt(entry[4]);\n    };\n    regionFields[\"offset\"] = region => {\n      region.offsetX = parseInt(entry[1]);\n      region.offsetY = parseInt(entry[2]);\n    };\n    regionFields[\"orig\"] = region => {\n      region.originalWidth = parseInt(entry[1]);\n      region.originalHeight = parseInt(entry[2]);\n    };\n    regionFields[\"offsets\"] = region => {\n      region.offsetX = parseInt(entry[1]);\n      region.offsetY = parseInt(entry[2]);\n      region.originalWidth = parseInt(entry[3]);\n      region.originalHeight = parseInt(entry[4]);\n    };\n    regionFields[\"rotate\"] = region => {\n      let value = entry[1];\n      if (value == \"true\") region.degrees = 90;else if (value != \"false\") region.degrees = parseInt(value);\n    };\n    regionFields[\"index\"] = region => {\n      region.index = parseInt(entry[1]);\n    };\n    let line = reader.readLine();\n    // Ignore empty lines before first entry.\n    while (line && line.trim().length == 0) line = reader.readLine();\n    // Header entries.\n    while (true) {\n      if (!line || line.trim().length == 0) break;\n      if (reader.readEntry(entry, line) == 0) break; // Silently ignore all header fields.\n      line = reader.readLine();\n    }\n    // Page and region entries.\n    let page = null;\n    let names = null;\n    let values = null;\n    while (true) {\n      if (line === null) break;\n      if (line.trim().length == 0) {\n        page = null;\n        line = reader.readLine();\n      } else if (!page) {\n        page = new TextureAtlasPage(line.trim());\n        while (true) {\n          if (reader.readEntry(entry, line = reader.readLine()) == 0) break;\n          let field = pageFields[entry[0]];\n          if (field) field(page);\n        }\n        this.pages.push(page);\n      } else {\n        let region = new TextureAtlasRegion(page, line);\n        while (true) {\n          let count = reader.readEntry(entry, line = reader.readLine());\n          if (count == 0) break;\n          let field = regionFields[entry[0]];\n          if (field) field(region);else {\n            if (!names) names = [];\n            if (!values) values = [];\n            names.push(entry[0]);\n            let entryValues = [];\n            for (let i = 0; i < count; i++) entryValues.push(parseInt(entry[i + 1]));\n            values.push(entryValues);\n          }\n        }\n        if (region.originalWidth == 0 && region.originalHeight == 0) {\n          region.originalWidth = region.width;\n          region.originalHeight = region.height;\n        }\n        if (names && names.length > 0 && values && values.length > 0) {\n          region.names = names;\n          region.values = values;\n          names = null;\n          values = null;\n        }\n        region.u = region.x / page.width;\n        region.v = region.y / page.height;\n        if (region.degrees == 90) {\n          region.u2 = (region.x + region.height) / page.width;\n          region.v2 = (region.y + region.width) / page.height;\n        } else {\n          region.u2 = (region.x + region.width) / page.width;\n          region.v2 = (region.y + region.height) / page.height;\n        }\n        this.regions.push(region);\n      }\n    }\n  }\n  findRegion(name) {\n    for (let i = 0; i < this.regions.length; i++) {\n      if (this.regions[i].name == name) {\n        return this.regions[i];\n      }\n    }\n    return null;\n  }\n  setTextures(assetManager, pathPrefix = \"\") {\n    for (let page of this.pages) page.setTexture(assetManager.get(pathPrefix + page.name));\n  }\n  dispose() {\n    for (let i = 0; i < this.pages.length; i++) {\n      this.pages[i].texture?.dispose();\n    }\n  }\n}\nclass TextureAtlasReader {\n  constructor(text) {\n    _defineProperty(this, \"lines\", void 0);\n    _defineProperty(this, \"index\", 0);\n    this.lines = text.split(/\\r\\n|\\r|\\n/);\n  }\n  readLine() {\n    if (this.index >= this.lines.length) return null;\n    return this.lines[this.index++];\n  }\n  readEntry(entry, line) {\n    if (!line) return 0;\n    line = line.trim();\n    if (line.length == 0) return 0;\n    let colon = line.indexOf(':');\n    if (colon == -1) return 0;\n    entry[0] = line.substr(0, colon).trim();\n    for (let i = 1, lastMatch = colon + 1;; i++) {\n      let comma = line.indexOf(',', lastMatch);\n      if (comma == -1) {\n        entry[i] = line.substr(lastMatch).trim();\n        return i;\n      }\n      entry[i] = line.substr(lastMatch, comma - lastMatch).trim();\n      lastMatch = comma + 1;\n      if (i == 4) return 4;\n    }\n  }\n}\nexport class TextureAtlasPage {\n  constructor(name) {\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"minFilter\", TextureFilter.Nearest);\n    _defineProperty(this, \"magFilter\", TextureFilter.Nearest);\n    _defineProperty(this, \"uWrap\", TextureWrap.ClampToEdge);\n    _defineProperty(this, \"vWrap\", TextureWrap.ClampToEdge);\n    _defineProperty(this, \"texture\", null);\n    _defineProperty(this, \"width\", 0);\n    _defineProperty(this, \"height\", 0);\n    _defineProperty(this, \"pma\", false);\n    _defineProperty(this, \"regions\", new Array());\n    this.name = name;\n  }\n  setTexture(texture) {\n    this.texture = texture;\n    texture.setFilters(this.minFilter, this.magFilter);\n    texture.setWraps(this.uWrap, this.vWrap);\n    for (let region of this.regions) region.texture = texture;\n  }\n}\nexport class TextureAtlasRegion extends TextureRegion {\n  constructor(page, name) {\n    super();\n    _defineProperty(this, \"page\", void 0);\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"x\", 0);\n    _defineProperty(this, \"y\", 0);\n    _defineProperty(this, \"offsetX\", 0);\n    _defineProperty(this, \"offsetY\", 0);\n    _defineProperty(this, \"originalWidth\", 0);\n    _defineProperty(this, \"originalHeight\", 0);\n    _defineProperty(this, \"index\", 0);\n    _defineProperty(this, \"degrees\", 0);\n    _defineProperty(this, \"names\", null);\n    _defineProperty(this, \"values\", null);\n    this.page = page;\n    this.name = name;\n    page.regions.push(this);\n  }\n}","map":{"version":3,"names":["TextureFilter","TextureWrap","TextureRegion","Utils","TextureAtlas","constructor","atlasText","_defineProperty","Array","reader","TextureAtlasReader","entry","pageFields","page","width","parseInt","height","minFilter","enumValue","magFilter","indexOf","uWrap","Repeat","vWrap","pma","regionFields","region","x","y","offsetX","offsetY","originalWidth","originalHeight","value","degrees","index","line","readLine","trim","length","readEntry","names","values","TextureAtlasPage","field","pages","push","TextureAtlasRegion","count","entryValues","i","u","v","u2","v2","regions","findRegion","name","setTextures","assetManager","pathPrefix","setTexture","get","dispose","texture","text","lines","split","colon","substr","lastMatch","comma","Nearest","ClampToEdge","setFilters","setWraps"],"sources":["../src/TextureAtlas.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}