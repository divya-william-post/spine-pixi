{"ast":null,"code":"import _defineProperty from \"/Users/divya/Documents/vue-2024-spine/vue-20240spine/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Color } from \"../Utils.js\";\nimport { VertexAttachment } from \"./Attachment.js\";\n/** An attachment with vertices that make up a polygon used for clipping the rendering of other attachments. */\nexport class ClippingAttachment extends VertexAttachment {\n  // ce3a3aff\n  constructor(name) {\n    super(name);\n    /** Clipping is performed between the clipping polygon's slot and the end slot. Returns null if clipping is done until the end of\n     * the skeleton's rendering. */\n    _defineProperty(this, \"endSlot\", null);\n    // Nonessential.\n    /** The color of the clipping polygon as it was in Spine. Available only when nonessential data was exported. Clipping polygons\n     * are not usually rendered at runtime. */\n    _defineProperty(this, \"color\", new Color(0.2275, 0.2275, 0.8078, 1));\n  }\n  copy() {\n    let copy = new ClippingAttachment(this.name);\n    this.copyTo(copy);\n    copy.endSlot = this.endSlot;\n    copy.color.setFromColor(this.color);\n    return copy;\n  }\n}","map":{"version":3,"names":["Color","VertexAttachment","ClippingAttachment","constructor","name","_defineProperty","copy","copyTo","endSlot","color","setFromColor"],"sources":["../../src/attachments/ClippingAttachment.ts"],"sourcesContent":[null],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAASC,gBAAgB,QAAoB,iBAAiB;AAE9D;AACA,OAAM,MAAOC,kBAAmB,SAAQD,gBAAgB;EAQT;EAE9CE,YAAaC,IAAY;IACxB,KAAK,CAACA,IAAI,CAAC;IAVZ;;IAAAC,eAAA,kBAE2B,IAAI;IAE/B;IACA;;IAAAA,eAAA,gBAEQ,IAAIL,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;EAI5C;EAEAM,IAAIA,CAAA;IACH,IAAIA,IAAI,GAAG,IAAIJ,kBAAkB,CAAC,IAAI,CAACE,IAAI,CAAC;IAC5C,IAAI,CAACG,MAAM,CAACD,IAAI,CAAC;IACjBA,IAAI,CAACE,OAAO,GAAG,IAAI,CAACA,OAAO;IAC3BF,IAAI,CAACG,KAAK,CAACC,YAAY,CAAC,IAAI,CAACD,KAAK,CAAC;IACnC,OAAOH,IAAI;EACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}