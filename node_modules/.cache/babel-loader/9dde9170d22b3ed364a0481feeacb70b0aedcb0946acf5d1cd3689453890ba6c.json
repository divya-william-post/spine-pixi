{"ast":null,"code":"import { ConstraintData } from './ConstraintData.mjs';\nimport { PositionMode, RotateMode } from '@pixi-spine/base';\nclass PathConstraintData extends ConstraintData {\n  constructor(name) {\n    super(name, 0, false);\n    /** The bones that will be modified by this path constraint. */\n    this.bones = new Array();\n    /** The slot whose path attachment will be used to constrained the bones. */\n    this._target = null;\n    /** The mode for positioning the first bone on the path. */\n    this.positionMode = PositionMode.Fixed;\n    /** The mode for positioning the bones after the first bone on the path. */\n    this.spacingMode = SpacingMode.Fixed;\n    /** The mode for adjusting the rotation of the bones. */\n    this.rotateMode = RotateMode.Chain;\n    /** An offset added to the constrained bone rotation. */\n    this.offsetRotation = 0;\n    /** The position along the path. */\n    this.position = 0;\n    /** The spacing between bones. */\n    this.spacing = 0;\n    this.mixRotate = 0;\n    this.mixX = 0;\n    this.mixY = 0;\n  }\n  set target(slotData) {\n    this._target = slotData;\n  }\n  get target() {\n    if (!this._target) throw new Error(\"SlotData not set.\");else return this._target;\n  }\n}\nvar SpacingMode = /* @__PURE__ */(SpacingMode2 => {\n  SpacingMode2[SpacingMode2[\"Length\"] = 0] = \"Length\";\n  SpacingMode2[SpacingMode2[\"Fixed\"] = 1] = \"Fixed\";\n  SpacingMode2[SpacingMode2[\"Percent\"] = 2] = \"Percent\";\n  SpacingMode2[SpacingMode2[\"Proportional\"] = 3] = \"Proportional\";\n  return SpacingMode2;\n})(SpacingMode || {});\nexport { PathConstraintData, SpacingMode };","map":{"version":3,"names":["PathConstraintData","ConstraintData","constructor","name","bones","Array","_target","positionMode","PositionMode","Fixed","spacingMode","SpacingMode","rotateMode","RotateMode","Chain","offsetRotation","position","spacing","mixRotate","mixX","mixY","target","slotData","Error","SpacingMode2"],"sources":["../../src/core/PathConstraintData.ts"],"sourcesContent":["import { ConstraintData } from './ConstraintData';\nimport type { SlotData } from './SlotData';\nimport type { BoneData } from './BoneData';\nimport { PositionMode, RotateMode } from '@pixi-spine/base';\n\n/** Stores the setup pose for a {@link PathConstraint}.\n *\n * See [Path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide.\n * @public\n * */\nexport class PathConstraintData extends ConstraintData {\n    /** The bones that will be modified by this path constraint. */\n    bones = new Array<BoneData>();\n\n    /** The slot whose path attachment will be used to constrained the bones. */\n    private _target: SlotData | null = null;\n    public set target(slotData: SlotData) {\n        this._target = slotData;\n    }\n    public get target() {\n        if (!this._target) throw new Error('SlotData not set.');\n        else return this._target;\n    }\n\n    /** The mode for positioning the first bone on the path. */\n    positionMode: PositionMode = PositionMode.Fixed;\n\n    /** The mode for positioning the bones after the first bone on the path. */\n    spacingMode: SpacingMode = SpacingMode.Fixed;\n\n    /** The mode for adjusting the rotation of the bones. */\n    rotateMode: RotateMode = RotateMode.Chain;\n\n    /** An offset added to the constrained bone rotation. */\n    offsetRotation = 0;\n\n    /** The position along the path. */\n    position = 0;\n\n    /** The spacing between bones. */\n    spacing = 0;\n\n    mixRotate = 0;\n    mixX = 0;\n    mixY = 0;\n\n    constructor(name: string) {\n        super(name, 0, false);\n    }\n}\n\n/** Controls how bones after the first bone are positioned along the path.\n *\n * [Spacing mode](http://esotericsoftware.com/spine-path-constraints#Spacing-mode) in the Spine User Guide.\n * @public\n * */\nexport enum SpacingMode {\n    Length,\n    Fixed,\n    Percent,\n    Proportional,\n}\n"],"mappings":";;AAUO,MAAMA,kBAAA,SAA2BC,cAAe;EAoCnDC,YAAYC,IAAc;IAChB,MAAAA,IAAA,EAAM,GAAG,KAAK;IAnCxB;IAAA,KAAAC,KAAA,GAAQ,IAAIC,KAAgB;IAG5B;IAAA,KAAQC,OAA2B;IAUnC;IAAA,KAAAC,YAAA,GAA6BC,YAAa,CAAAC,KAAA;IAG1C;IAAA,KAAAC,WAAA,GAA2BC,WAAY,CAAAF,KAAA;IAGvC;IAAA,KAAAG,UAAA,GAAyBC,UAAW,CAAAC,KAAA;IAGpC;IAAiB,KAAAC,cAAA;IAGjB;IAAW,KAAAC,QAAA;IAGX;IAAU,KAAAC,OAAA;IAEE,KAAAC,SAAA;IACL,KAAAC,IAAA;IACA,KAAAC,IAAA;EAAA;EA5BP,IAAWC,OAAOC,QAAoB;IAClC,KAAKhB,OAAU,GAAAgB,QAAA;EAAA;EAEnB,IAAWD,MAASA,CAAA;IAChB,IAAI,CAAC,IAAK,CAAAf,OAAA,EAAe,UAAIiB,KAAA,CAAM,mBAAmB,OACjD,OAAO,IAAK,CAAAjB,OAAA;EAAA;AA4BzB;AAOY,IAAAK,WAAA,mBAAAa,YAAL;EACHA,YAAA,CAAAA,YAAA;EACAA,YAAA,CAAAA,YAAA;EACAA,YAAA,CAAAA,YAAA;EACAA,YAAA,CAAAA,YAAA;EAJQ,OAAAA,YAAA;AAAA,GAAAb,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}