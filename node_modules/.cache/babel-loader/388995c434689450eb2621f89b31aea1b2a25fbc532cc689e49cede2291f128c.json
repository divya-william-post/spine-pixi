{"ast":null,"code":"import _defineProperty from \"/Users/divya/Documents/vue-2024-spine/vue-20240spine/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\n/** Stores the setup pose and all of the stateless data for a skeleton.\n *\n * See [Data objects](http://esotericsoftware.com/spine-runtime-architecture#Data-objects) in the Spine Runtimes\n * Guide. */\nexport class SkeletonData {\n  constructor() {\n    /** The skeleton's name, which by default is the name of the skeleton data file, if possible. May be null. */\n    _defineProperty(this, \"name\", null);\n    /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n    _defineProperty(this, \"bones\", new Array());\n    // Ordered parents first.\n    /** The skeleton's slots. */\n    _defineProperty(this, \"slots\", new Array());\n    // Setup pose draw order.\n    _defineProperty(this, \"skins\", new Array());\n    /** The skeleton's default skin. By default this skin contains all attachments that were not in a skin in Spine.\n     *\n     * See {@link Skeleton#getAttachmentByName()}.\n     * May be null. */\n    _defineProperty(this, \"defaultSkin\", null);\n    /** The skeleton's events. */\n    _defineProperty(this, \"events\", new Array());\n    /** The skeleton's animations. */\n    _defineProperty(this, \"animations\", new Array());\n    /** The skeleton's IK constraints. */\n    _defineProperty(this, \"ikConstraints\", new Array());\n    /** The skeleton's transform constraints. */\n    _defineProperty(this, \"transformConstraints\", new Array());\n    /** The skeleton's path constraints. */\n    _defineProperty(this, \"pathConstraints\", new Array());\n    /** The X coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n    _defineProperty(this, \"x\", 0);\n    /** The Y coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n    _defineProperty(this, \"y\", 0);\n    /** The width of the skeleton's axis aligned bounding box in the setup pose. */\n    _defineProperty(this, \"width\", 0);\n    /** The height of the skeleton's axis aligned bounding box in the setup pose. */\n    _defineProperty(this, \"height\", 0);\n    /** The Spine version used to export the skeleton data, or null. */\n    _defineProperty(this, \"version\", null);\n    /** The skeleton data hash. This value will change if any of the skeleton data has changed. May be null. */\n    _defineProperty(this, \"hash\", null);\n    // Nonessential\n    /** The dopesheet FPS in Spine. Available only when nonessential data was exported. */\n    _defineProperty(this, \"fps\", 0);\n    /** The path to the images directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n    _defineProperty(this, \"imagesPath\", null);\n    /** The path to the audio directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n    _defineProperty(this, \"audioPath\", null);\n  }\n  /** Finds a bone by comparing each bone's name. It is more efficient to cache the results of this method than to call it\n   * multiple times.\n   * @returns May be null. */\n  findBone(boneName) {\n    if (!boneName) throw new Error(\"boneName cannot be null.\");\n    let bones = this.bones;\n    for (let i = 0, n = bones.length; i < n; i++) {\n      let bone = bones[i];\n      if (bone.name == boneName) return bone;\n    }\n    return null;\n  }\n  /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\n   * multiple times.\n   * @returns May be null. */\n  findSlot(slotName) {\n    if (!slotName) throw new Error(\"slotName cannot be null.\");\n    let slots = this.slots;\n    for (let i = 0, n = slots.length; i < n; i++) {\n      let slot = slots[i];\n      if (slot.name == slotName) return slot;\n    }\n    return null;\n  }\n  /** Finds a skin by comparing each skin's name. It is more efficient to cache the results of this method than to call it\n   * multiple times.\n   * @returns May be null. */\n  findSkin(skinName) {\n    if (!skinName) throw new Error(\"skinName cannot be null.\");\n    let skins = this.skins;\n    for (let i = 0, n = skins.length; i < n; i++) {\n      let skin = skins[i];\n      if (skin.name == skinName) return skin;\n    }\n    return null;\n  }\n  /** Finds an event by comparing each events's name. It is more efficient to cache the results of this method than to call it\n   * multiple times.\n   * @returns May be null. */\n  findEvent(eventDataName) {\n    if (!eventDataName) throw new Error(\"eventDataName cannot be null.\");\n    let events = this.events;\n    for (let i = 0, n = events.length; i < n; i++) {\n      let event = events[i];\n      if (event.name == eventDataName) return event;\n    }\n    return null;\n  }\n  /** Finds an animation by comparing each animation's name. It is more efficient to cache the results of this method than to\n   * call it multiple times.\n   * @returns May be null. */\n  findAnimation(animationName) {\n    if (!animationName) throw new Error(\"animationName cannot be null.\");\n    let animations = this.animations;\n    for (let i = 0, n = animations.length; i < n; i++) {\n      let animation = animations[i];\n      if (animation.name == animationName) return animation;\n    }\n    return null;\n  }\n  /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\n   * than to call it multiple times.\n   * @return May be null. */\n  findIkConstraint(constraintName) {\n    if (!constraintName) throw new Error(\"constraintName cannot be null.\");\n    let ikConstraints = this.ikConstraints;\n    for (let i = 0, n = ikConstraints.length; i < n; i++) {\n      let constraint = ikConstraints[i];\n      if (constraint.name == constraintName) return constraint;\n    }\n    return null;\n  }\n  /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\n   * this method than to call it multiple times.\n   * @return May be null. */\n  findTransformConstraint(constraintName) {\n    if (!constraintName) throw new Error(\"constraintName cannot be null.\");\n    let transformConstraints = this.transformConstraints;\n    for (let i = 0, n = transformConstraints.length; i < n; i++) {\n      let constraint = transformConstraints[i];\n      if (constraint.name == constraintName) return constraint;\n    }\n    return null;\n  }\n  /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\n   * than to call it multiple times.\n   * @return May be null. */\n  findPathConstraint(constraintName) {\n    if (!constraintName) throw new Error(\"constraintName cannot be null.\");\n    let pathConstraints = this.pathConstraints;\n    for (let i = 0, n = pathConstraints.length; i < n; i++) {\n      let constraint = pathConstraints[i];\n      if (constraint.name == constraintName) return constraint;\n    }\n    return null;\n  }\n}","map":{"version":3,"names":["SkeletonData","constructor","_defineProperty","Array","findBone","boneName","Error","bones","i","n","length","bone","name","findSlot","slotName","slots","slot","findSkin","skinName","skins","skin","findEvent","eventDataName","events","event","findAnimation","animationName","animations","animation","findIkConstraint","constraintName","ikConstraints","constraint","findTransformConstraint","transformConstraints","findPathConstraint","pathConstraints"],"sources":["../src/SkeletonData.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}