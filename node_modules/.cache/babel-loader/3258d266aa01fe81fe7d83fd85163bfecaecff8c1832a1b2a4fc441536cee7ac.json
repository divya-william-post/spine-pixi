{"ast":null,"code":"import _defineProperty from \"/Users/divya/Documents/vue-2024-spine/vue-20240spine/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Animation, AttachmentTimeline, RGBATimeline, RGBTimeline, RGBA2Timeline, RGB2Timeline, AlphaTimeline, RotateTimeline, TranslateTimeline, TranslateXTimeline, TranslateYTimeline, ScaleTimeline, ScaleXTimeline, ScaleYTimeline, ShearTimeline, ShearXTimeline, ShearYTimeline, IkConstraintTimeline, TransformConstraintTimeline, PathConstraintPositionTimeline, PathConstraintSpacingTimeline, PathConstraintMixTimeline, DeformTimeline, DrawOrderTimeline, EventTimeline, SequenceTimeline } from \"./Animation.js\";\nimport { Sequence, SequenceModeValues } from \"./attachments/Sequence.js\";\nimport { BoneData } from \"./BoneData.js\";\nimport { Event } from \"./Event.js\";\nimport { EventData } from \"./EventData.js\";\nimport { IkConstraintData } from \"./IkConstraintData.js\";\nimport { PathConstraintData, PositionMode, SpacingMode } from \"./PathConstraintData.js\";\nimport { SkeletonData } from \"./SkeletonData.js\";\nimport { Skin } from \"./Skin.js\";\nimport { SlotData } from \"./SlotData.js\";\nimport { TransformConstraintData } from \"./TransformConstraintData.js\";\nimport { Color, Utils } from \"./Utils.js\";\n/** Loads skeleton data in the Spine binary format.\n *\n * See [Spine binary format](http://esotericsoftware.com/spine-binary-format) and\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\n * Runtimes Guide. */\nexport class SkeletonBinary {\n  constructor(attachmentLoader) {\n    /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\n     * runtime than were used in Spine.\n     *\n     * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n    _defineProperty(this, \"scale\", 1);\n    _defineProperty(this, \"attachmentLoader\", void 0);\n    _defineProperty(this, \"linkedMeshes\", new Array());\n    this.attachmentLoader = attachmentLoader;\n  }\n  readSkeletonData(binary) {\n    let scale = this.scale;\n    let skeletonData = new SkeletonData();\n    skeletonData.name = \"\"; // BOZO\n    let input = new BinaryInput(binary);\n    let lowHash = input.readInt32();\n    let highHash = input.readInt32();\n    skeletonData.hash = highHash == 0 && lowHash == 0 ? null : highHash.toString(16) + lowHash.toString(16);\n    skeletonData.version = input.readString();\n    skeletonData.x = input.readFloat();\n    skeletonData.y = input.readFloat();\n    skeletonData.width = input.readFloat();\n    skeletonData.height = input.readFloat();\n    let nonessential = input.readBoolean();\n    if (nonessential) {\n      skeletonData.fps = input.readFloat();\n      skeletonData.imagesPath = input.readString();\n      skeletonData.audioPath = input.readString();\n    }\n    let n = 0;\n    // Strings.\n    n = input.readInt(true);\n    for (let i = 0; i < n; i++) {\n      let str = input.readString();\n      if (!str) throw new Error(\"String in string table must not be null.\");\n      input.strings.push(str);\n    }\n    // Bones.\n    n = input.readInt(true);\n    for (let i = 0; i < n; i++) {\n      let name = input.readString();\n      if (!name) throw new Error(\"Bone name must not be null.\");\n      let parent = i == 0 ? null : skeletonData.bones[input.readInt(true)];\n      let data = new BoneData(i, name, parent);\n      data.rotation = input.readFloat();\n      data.x = input.readFloat() * scale;\n      data.y = input.readFloat() * scale;\n      data.scaleX = input.readFloat();\n      data.scaleY = input.readFloat();\n      data.shearX = input.readFloat();\n      data.shearY = input.readFloat();\n      data.length = input.readFloat() * scale;\n      data.transformMode = input.readInt(true);\n      data.skinRequired = input.readBoolean();\n      if (nonessential) Color.rgba8888ToColor(data.color, input.readInt32());\n      skeletonData.bones.push(data);\n    }\n    // Slots.\n    n = input.readInt(true);\n    for (let i = 0; i < n; i++) {\n      let slotName = input.readString();\n      if (!slotName) throw new Error(\"Slot name must not be null.\");\n      let boneData = skeletonData.bones[input.readInt(true)];\n      let data = new SlotData(i, slotName, boneData);\n      Color.rgba8888ToColor(data.color, input.readInt32());\n      let darkColor = input.readInt32();\n      if (darkColor != -1) Color.rgb888ToColor(data.darkColor = new Color(), darkColor);\n      data.attachmentName = input.readStringRef();\n      data.blendMode = input.readInt(true);\n      skeletonData.slots.push(data);\n    }\n    // IK constraints.\n    n = input.readInt(true);\n    for (let i = 0, nn; i < n; i++) {\n      let name = input.readString();\n      if (!name) throw new Error(\"IK constraint data name must not be null.\");\n      let data = new IkConstraintData(name);\n      data.order = input.readInt(true);\n      data.skinRequired = input.readBoolean();\n      nn = input.readInt(true);\n      for (let ii = 0; ii < nn; ii++) data.bones.push(skeletonData.bones[input.readInt(true)]);\n      data.target = skeletonData.bones[input.readInt(true)];\n      data.mix = input.readFloat();\n      data.softness = input.readFloat() * scale;\n      data.bendDirection = input.readByte();\n      data.compress = input.readBoolean();\n      data.stretch = input.readBoolean();\n      data.uniform = input.readBoolean();\n      skeletonData.ikConstraints.push(data);\n    }\n    // Transform constraints.\n    n = input.readInt(true);\n    for (let i = 0, nn; i < n; i++) {\n      let name = input.readString();\n      if (!name) throw new Error(\"Transform constraint data name must not be null.\");\n      let data = new TransformConstraintData(name);\n      data.order = input.readInt(true);\n      data.skinRequired = input.readBoolean();\n      nn = input.readInt(true);\n      for (let ii = 0; ii < nn; ii++) data.bones.push(skeletonData.bones[input.readInt(true)]);\n      data.target = skeletonData.bones[input.readInt(true)];\n      data.local = input.readBoolean();\n      data.relative = input.readBoolean();\n      data.offsetRotation = input.readFloat();\n      data.offsetX = input.readFloat() * scale;\n      data.offsetY = input.readFloat() * scale;\n      data.offsetScaleX = input.readFloat();\n      data.offsetScaleY = input.readFloat();\n      data.offsetShearY = input.readFloat();\n      data.mixRotate = input.readFloat();\n      data.mixX = input.readFloat();\n      data.mixY = input.readFloat();\n      data.mixScaleX = input.readFloat();\n      data.mixScaleY = input.readFloat();\n      data.mixShearY = input.readFloat();\n      skeletonData.transformConstraints.push(data);\n    }\n    // Path constraints.\n    n = input.readInt(true);\n    for (let i = 0, nn; i < n; i++) {\n      let name = input.readString();\n      if (!name) throw new Error(\"Path constraint data name must not be null.\");\n      let data = new PathConstraintData(name);\n      data.order = input.readInt(true);\n      data.skinRequired = input.readBoolean();\n      nn = input.readInt(true);\n      for (let ii = 0; ii < nn; ii++) data.bones.push(skeletonData.bones[input.readInt(true)]);\n      data.target = skeletonData.slots[input.readInt(true)];\n      data.positionMode = input.readInt(true);\n      data.spacingMode = input.readInt(true);\n      data.rotateMode = input.readInt(true);\n      data.offsetRotation = input.readFloat();\n      data.position = input.readFloat();\n      if (data.positionMode == PositionMode.Fixed) data.position *= scale;\n      data.spacing = input.readFloat();\n      if (data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed) data.spacing *= scale;\n      data.mixRotate = input.readFloat();\n      data.mixX = input.readFloat();\n      data.mixY = input.readFloat();\n      skeletonData.pathConstraints.push(data);\n    }\n    // Default skin.\n    let defaultSkin = this.readSkin(input, skeletonData, true, nonessential);\n    if (defaultSkin) {\n      skeletonData.defaultSkin = defaultSkin;\n      skeletonData.skins.push(defaultSkin);\n    }\n    // Skins.\n    {\n      let i = skeletonData.skins.length;\n      Utils.setArraySize(skeletonData.skins, n = i + input.readInt(true));\n      for (; i < n; i++) {\n        let skin = this.readSkin(input, skeletonData, false, nonessential);\n        if (!skin) throw new Error(\"readSkin() should not have returned null.\");\n        skeletonData.skins[i] = skin;\n      }\n    }\n    // Linked meshes.\n    n = this.linkedMeshes.length;\n    for (let i = 0; i < n; i++) {\n      let linkedMesh = this.linkedMeshes[i];\n      let skin = !linkedMesh.skin ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);\n      if (!skin) throw new Error(\"Not skin found for linked mesh.\");\n      if (!linkedMesh.parent) throw new Error(\"Linked mesh parent must not be null\");\n      let parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n      if (!parent) throw new Error(`Parent mesh not found: ${linkedMesh.parent}`);\n      linkedMesh.mesh.timelineAttachment = linkedMesh.inheritTimeline ? parent : linkedMesh.mesh;\n      linkedMesh.mesh.setParentMesh(parent);\n      if (linkedMesh.mesh.region != null) linkedMesh.mesh.updateRegion();\n    }\n    this.linkedMeshes.length = 0;\n    // Events.\n    n = input.readInt(true);\n    for (let i = 0; i < n; i++) {\n      let eventName = input.readStringRef();\n      if (!eventName) throw new Error();\n      let data = new EventData(eventName);\n      data.intValue = input.readInt(false);\n      data.floatValue = input.readFloat();\n      data.stringValue = input.readString();\n      data.audioPath = input.readString();\n      if (data.audioPath) {\n        data.volume = input.readFloat();\n        data.balance = input.readFloat();\n      }\n      skeletonData.events.push(data);\n    }\n    // Animations.\n    n = input.readInt(true);\n    for (let i = 0; i < n; i++) {\n      let animationName = input.readString();\n      if (!animationName) throw new Error(\"Animatio name must not be null.\");\n      skeletonData.animations.push(this.readAnimation(input, animationName, skeletonData));\n    }\n    return skeletonData;\n  }\n  readSkin(input, skeletonData, defaultSkin, nonessential) {\n    let skin = null;\n    let slotCount = 0;\n    if (defaultSkin) {\n      slotCount = input.readInt(true);\n      if (slotCount == 0) return null;\n      skin = new Skin(\"default\");\n    } else {\n      let skinName = input.readStringRef();\n      if (!skinName) throw new Error(\"Skin name must not be null.\");\n      skin = new Skin(skinName);\n      skin.bones.length = input.readInt(true);\n      for (let i = 0, n = skin.bones.length; i < n; i++) skin.bones[i] = skeletonData.bones[input.readInt(true)];\n      for (let i = 0, n = input.readInt(true); i < n; i++) skin.constraints.push(skeletonData.ikConstraints[input.readInt(true)]);\n      for (let i = 0, n = input.readInt(true); i < n; i++) skin.constraints.push(skeletonData.transformConstraints[input.readInt(true)]);\n      for (let i = 0, n = input.readInt(true); i < n; i++) skin.constraints.push(skeletonData.pathConstraints[input.readInt(true)]);\n      slotCount = input.readInt(true);\n    }\n    for (let i = 0; i < slotCount; i++) {\n      let slotIndex = input.readInt(true);\n      for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n        let name = input.readStringRef();\n        if (!name) throw new Error(\"Attachment name must not be null\");\n        let attachment = this.readAttachment(input, skeletonData, skin, slotIndex, name, nonessential);\n        if (attachment) skin.setAttachment(slotIndex, name, attachment);\n      }\n    }\n    return skin;\n  }\n  readAttachment(input, skeletonData, skin, slotIndex, attachmentName, nonessential) {\n    let scale = this.scale;\n    let name = input.readStringRef();\n    if (!name) name = attachmentName;\n    switch (input.readByte()) {\n      case AttachmentType.Region:\n        {\n          let path = input.readStringRef();\n          let rotation = input.readFloat();\n          let x = input.readFloat();\n          let y = input.readFloat();\n          let scaleX = input.readFloat();\n          let scaleY = input.readFloat();\n          let width = input.readFloat();\n          let height = input.readFloat();\n          let color = input.readInt32();\n          let sequence = this.readSequence(input);\n          if (!path) path = name;\n          let region = this.attachmentLoader.newRegionAttachment(skin, name, path, sequence);\n          if (!region) return null;\n          region.path = path;\n          region.x = x * scale;\n          region.y = y * scale;\n          region.scaleX = scaleX;\n          region.scaleY = scaleY;\n          region.rotation = rotation;\n          region.width = width * scale;\n          region.height = height * scale;\n          Color.rgba8888ToColor(region.color, color);\n          region.sequence = sequence;\n          if (sequence == null) region.updateRegion();\n          return region;\n        }\n      case AttachmentType.BoundingBox:\n        {\n          let vertexCount = input.readInt(true);\n          let vertices = this.readVertices(input, vertexCount);\n          let color = nonessential ? input.readInt32() : 0;\n          let box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n          if (!box) return null;\n          box.worldVerticesLength = vertexCount << 1;\n          box.vertices = vertices.vertices;\n          box.bones = vertices.bones;\n          if (nonessential) Color.rgba8888ToColor(box.color, color);\n          return box;\n        }\n      case AttachmentType.Mesh:\n        {\n          let path = input.readStringRef();\n          let color = input.readInt32();\n          let vertexCount = input.readInt(true);\n          let uvs = this.readFloatArray(input, vertexCount << 1, 1);\n          let triangles = this.readShortArray(input);\n          let vertices = this.readVertices(input, vertexCount);\n          let hullLength = input.readInt(true);\n          let sequence = this.readSequence(input);\n          let edges = [];\n          let width = 0,\n            height = 0;\n          if (nonessential) {\n            edges = this.readShortArray(input);\n            width = input.readFloat();\n            height = input.readFloat();\n          }\n          if (!path) path = name;\n          let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n          if (!mesh) return null;\n          mesh.path = path;\n          Color.rgba8888ToColor(mesh.color, color);\n          mesh.bones = vertices.bones;\n          mesh.vertices = vertices.vertices;\n          mesh.worldVerticesLength = vertexCount << 1;\n          mesh.triangles = triangles;\n          mesh.regionUVs = uvs;\n          if (sequence == null) mesh.updateRegion();\n          mesh.hullLength = hullLength << 1;\n          mesh.sequence = sequence;\n          if (nonessential) {\n            mesh.edges = edges;\n            mesh.width = width * scale;\n            mesh.height = height * scale;\n          }\n          return mesh;\n        }\n      case AttachmentType.LinkedMesh:\n        {\n          let path = input.readStringRef();\n          let color = input.readInt32();\n          let skinName = input.readStringRef();\n          let parent = input.readStringRef();\n          let inheritTimelines = input.readBoolean();\n          let sequence = this.readSequence(input);\n          let width = 0,\n            height = 0;\n          if (nonessential) {\n            width = input.readFloat();\n            height = input.readFloat();\n          }\n          if (!path) path = name;\n          let mesh = this.attachmentLoader.newMeshAttachment(skin, name, path, sequence);\n          if (!mesh) return null;\n          mesh.path = path;\n          Color.rgba8888ToColor(mesh.color, color);\n          mesh.sequence = sequence;\n          if (nonessential) {\n            mesh.width = width * scale;\n            mesh.height = height * scale;\n          }\n          this.linkedMeshes.push(new LinkedMesh(mesh, skinName, slotIndex, parent, inheritTimelines));\n          return mesh;\n        }\n      case AttachmentType.Path:\n        {\n          let closed = input.readBoolean();\n          let constantSpeed = input.readBoolean();\n          let vertexCount = input.readInt(true);\n          let vertices = this.readVertices(input, vertexCount);\n          let lengths = Utils.newArray(vertexCount / 3, 0);\n          for (let i = 0, n = lengths.length; i < n; i++) lengths[i] = input.readFloat() * scale;\n          let color = nonessential ? input.readInt32() : 0;\n          let path = this.attachmentLoader.newPathAttachment(skin, name);\n          if (!path) return null;\n          path.closed = closed;\n          path.constantSpeed = constantSpeed;\n          path.worldVerticesLength = vertexCount << 1;\n          path.vertices = vertices.vertices;\n          path.bones = vertices.bones;\n          path.lengths = lengths;\n          if (nonessential) Color.rgba8888ToColor(path.color, color);\n          return path;\n        }\n      case AttachmentType.Point:\n        {\n          let rotation = input.readFloat();\n          let x = input.readFloat();\n          let y = input.readFloat();\n          let color = nonessential ? input.readInt32() : 0;\n          let point = this.attachmentLoader.newPointAttachment(skin, name);\n          if (!point) return null;\n          point.x = x * scale;\n          point.y = y * scale;\n          point.rotation = rotation;\n          if (nonessential) Color.rgba8888ToColor(point.color, color);\n          return point;\n        }\n      case AttachmentType.Clipping:\n        {\n          let endSlotIndex = input.readInt(true);\n          let vertexCount = input.readInt(true);\n          let vertices = this.readVertices(input, vertexCount);\n          let color = nonessential ? input.readInt32() : 0;\n          let clip = this.attachmentLoader.newClippingAttachment(skin, name);\n          if (!clip) return null;\n          clip.endSlot = skeletonData.slots[endSlotIndex];\n          clip.worldVerticesLength = vertexCount << 1;\n          clip.vertices = vertices.vertices;\n          clip.bones = vertices.bones;\n          if (nonessential) Color.rgba8888ToColor(clip.color, color);\n          return clip;\n        }\n    }\n    return null;\n  }\n  readSequence(input) {\n    if (!input.readBoolean()) return null;\n    let sequence = new Sequence(input.readInt(true));\n    sequence.start = input.readInt(true);\n    sequence.digits = input.readInt(true);\n    sequence.setupIndex = input.readInt(true);\n    return sequence;\n  }\n  readVertices(input, vertexCount) {\n    let scale = this.scale;\n    let verticesLength = vertexCount << 1;\n    let vertices = new Vertices();\n    if (!input.readBoolean()) {\n      vertices.vertices = this.readFloatArray(input, verticesLength, scale);\n      return vertices;\n    }\n    let weights = new Array();\n    let bonesArray = new Array();\n    for (let i = 0; i < vertexCount; i++) {\n      let boneCount = input.readInt(true);\n      bonesArray.push(boneCount);\n      for (let ii = 0; ii < boneCount; ii++) {\n        bonesArray.push(input.readInt(true));\n        weights.push(input.readFloat() * scale);\n        weights.push(input.readFloat() * scale);\n        weights.push(input.readFloat());\n      }\n    }\n    vertices.vertices = Utils.toFloatArray(weights);\n    vertices.bones = bonesArray;\n    return vertices;\n  }\n  readFloatArray(input, n, scale) {\n    let array = new Array(n);\n    if (scale == 1) {\n      for (let i = 0; i < n; i++) array[i] = input.readFloat();\n    } else {\n      for (let i = 0; i < n; i++) array[i] = input.readFloat() * scale;\n    }\n    return array;\n  }\n  readShortArray(input) {\n    let n = input.readInt(true);\n    let array = new Array(n);\n    for (let i = 0; i < n; i++) array[i] = input.readShort();\n    return array;\n  }\n  readAnimation(input, name, skeletonData) {\n    input.readInt(true); // Number of timelines.\n    let timelines = new Array();\n    let scale = this.scale;\n    let tempColor1 = new Color();\n    let tempColor2 = new Color();\n    // Slot timelines.\n    for (let i = 0, n = input.readInt(true); i < n; i++) {\n      let slotIndex = input.readInt(true);\n      for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n        let timelineType = input.readByte();\n        let frameCount = input.readInt(true);\n        let frameLast = frameCount - 1;\n        switch (timelineType) {\n          case SLOT_ATTACHMENT:\n            {\n              let timeline = new AttachmentTimeline(frameCount, slotIndex);\n              for (let frame = 0; frame < frameCount; frame++) timeline.setFrame(frame, input.readFloat(), input.readStringRef());\n              timelines.push(timeline);\n              break;\n            }\n          case SLOT_RGBA:\n            {\n              let bezierCount = input.readInt(true);\n              let timeline = new RGBATimeline(frameCount, bezierCount, slotIndex);\n              let time = input.readFloat();\n              let r = input.readUnsignedByte() / 255.0;\n              let g = input.readUnsignedByte() / 255.0;\n              let b = input.readUnsignedByte() / 255.0;\n              let a = input.readUnsignedByte() / 255.0;\n              for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, r, g, b, a);\n                if (frame == frameLast) break;\n                let time2 = input.readFloat();\n                let r2 = input.readUnsignedByte() / 255.0;\n                let g2 = input.readUnsignedByte() / 255.0;\n                let b2 = input.readUnsignedByte() / 255.0;\n                let a2 = input.readUnsignedByte() / 255.0;\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    timeline.setStepped(frame);\n                    break;\n                  case CURVE_BEZIER:\n                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, a2, 1);\n                }\n                time = time2;\n                r = r2;\n                g = g2;\n                b = b2;\n                a = a2;\n              }\n              timelines.push(timeline);\n              break;\n            }\n          case SLOT_RGB:\n            {\n              let bezierCount = input.readInt(true);\n              let timeline = new RGBTimeline(frameCount, bezierCount, slotIndex);\n              let time = input.readFloat();\n              let r = input.readUnsignedByte() / 255.0;\n              let g = input.readUnsignedByte() / 255.0;\n              let b = input.readUnsignedByte() / 255.0;\n              for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, r, g, b);\n                if (frame == frameLast) break;\n                let time2 = input.readFloat();\n                let r2 = input.readUnsignedByte() / 255.0;\n                let g2 = input.readUnsignedByte() / 255.0;\n                let b2 = input.readUnsignedByte() / 255.0;\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    timeline.setStepped(frame);\n                    break;\n                  case CURVE_BEZIER:\n                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, r2, 1);\n                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, g2, 1);\n                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, b2, 1);\n                }\n                time = time2;\n                r = r2;\n                g = g2;\n                b = b2;\n              }\n              timelines.push(timeline);\n              break;\n            }\n          case SLOT_RGBA2:\n            {\n              let bezierCount = input.readInt(true);\n              let timeline = new RGBA2Timeline(frameCount, bezierCount, slotIndex);\n              let time = input.readFloat();\n              let r = input.readUnsignedByte() / 255.0;\n              let g = input.readUnsignedByte() / 255.0;\n              let b = input.readUnsignedByte() / 255.0;\n              let a = input.readUnsignedByte() / 255.0;\n              let r2 = input.readUnsignedByte() / 255.0;\n              let g2 = input.readUnsignedByte() / 255.0;\n              let b2 = input.readUnsignedByte() / 255.0;\n              for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, r, g, b, a, r2, g2, b2);\n                if (frame == frameLast) break;\n                let time2 = input.readFloat();\n                let nr = input.readUnsignedByte() / 255.0;\n                let ng = input.readUnsignedByte() / 255.0;\n                let nb = input.readUnsignedByte() / 255.0;\n                let na = input.readUnsignedByte() / 255.0;\n                let nr2 = input.readUnsignedByte() / 255.0;\n                let ng2 = input.readUnsignedByte() / 255.0;\n                let nb2 = input.readUnsignedByte() / 255.0;\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    timeline.setStepped(frame);\n                    break;\n                  case CURVE_BEZIER:\n                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                    setBezier(input, timeline, bezier++, frame, 3, time, time2, a, na, 1);\n                    setBezier(input, timeline, bezier++, frame, 4, time, time2, r2, nr2, 1);\n                    setBezier(input, timeline, bezier++, frame, 5, time, time2, g2, ng2, 1);\n                    setBezier(input, timeline, bezier++, frame, 6, time, time2, b2, nb2, 1);\n                }\n                time = time2;\n                r = nr;\n                g = ng;\n                b = nb;\n                a = na;\n                r2 = nr2;\n                g2 = ng2;\n                b2 = nb2;\n              }\n              timelines.push(timeline);\n              break;\n            }\n          case SLOT_RGB2:\n            {\n              let bezierCount = input.readInt(true);\n              let timeline = new RGB2Timeline(frameCount, bezierCount, slotIndex);\n              let time = input.readFloat();\n              let r = input.readUnsignedByte() / 255.0;\n              let g = input.readUnsignedByte() / 255.0;\n              let b = input.readUnsignedByte() / 255.0;\n              let r2 = input.readUnsignedByte() / 255.0;\n              let g2 = input.readUnsignedByte() / 255.0;\n              let b2 = input.readUnsignedByte() / 255.0;\n              for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, r, g, b, r2, g2, b2);\n                if (frame == frameLast) break;\n                let time2 = input.readFloat();\n                let nr = input.readUnsignedByte() / 255.0;\n                let ng = input.readUnsignedByte() / 255.0;\n                let nb = input.readUnsignedByte() / 255.0;\n                let nr2 = input.readUnsignedByte() / 255.0;\n                let ng2 = input.readUnsignedByte() / 255.0;\n                let nb2 = input.readUnsignedByte() / 255.0;\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    timeline.setStepped(frame);\n                    break;\n                  case CURVE_BEZIER:\n                    setBezier(input, timeline, bezier++, frame, 0, time, time2, r, nr, 1);\n                    setBezier(input, timeline, bezier++, frame, 1, time, time2, g, ng, 1);\n                    setBezier(input, timeline, bezier++, frame, 2, time, time2, b, nb, 1);\n                    setBezier(input, timeline, bezier++, frame, 3, time, time2, r2, nr2, 1);\n                    setBezier(input, timeline, bezier++, frame, 4, time, time2, g2, ng2, 1);\n                    setBezier(input, timeline, bezier++, frame, 5, time, time2, b2, nb2, 1);\n                }\n                time = time2;\n                r = nr;\n                g = ng;\n                b = nb;\n                r2 = nr2;\n                g2 = ng2;\n                b2 = nb2;\n              }\n              timelines.push(timeline);\n              break;\n            }\n          case SLOT_ALPHA:\n            {\n              let timeline = new AlphaTimeline(frameCount, input.readInt(true), slotIndex);\n              let time = input.readFloat(),\n                a = input.readUnsignedByte() / 255;\n              for (let frame = 0, bezier = 0;; frame++) {\n                timeline.setFrame(frame, time, a);\n                if (frame == frameLast) break;\n                let time2 = input.readFloat();\n                let a2 = input.readUnsignedByte() / 255;\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    timeline.setStepped(frame);\n                    break;\n                  case CURVE_BEZIER:\n                    setBezier(input, timeline, bezier++, frame, 0, time, time2, a, a2, 1);\n                }\n                time = time2;\n                a = a2;\n              }\n              timelines.push(timeline);\n            }\n        }\n      }\n    }\n    // Bone timelines.\n    for (let i = 0, n = input.readInt(true); i < n; i++) {\n      let boneIndex = input.readInt(true);\n      for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n        let type = input.readByte(),\n          frameCount = input.readInt(true),\n          bezierCount = input.readInt(true);\n        switch (type) {\n          case BONE_ROTATE:\n            timelines.push(readTimeline1(input, new RotateTimeline(frameCount, bezierCount, boneIndex), 1));\n            break;\n          case BONE_TRANSLATE:\n            timelines.push(readTimeline2(input, new TranslateTimeline(frameCount, bezierCount, boneIndex), scale));\n            break;\n          case BONE_TRANSLATEX:\n            timelines.push(readTimeline1(input, new TranslateXTimeline(frameCount, bezierCount, boneIndex), scale));\n            break;\n          case BONE_TRANSLATEY:\n            timelines.push(readTimeline1(input, new TranslateYTimeline(frameCount, bezierCount, boneIndex), scale));\n            break;\n          case BONE_SCALE:\n            timelines.push(readTimeline2(input, new ScaleTimeline(frameCount, bezierCount, boneIndex), 1));\n            break;\n          case BONE_SCALEX:\n            timelines.push(readTimeline1(input, new ScaleXTimeline(frameCount, bezierCount, boneIndex), 1));\n            break;\n          case BONE_SCALEY:\n            timelines.push(readTimeline1(input, new ScaleYTimeline(frameCount, bezierCount, boneIndex), 1));\n            break;\n          case BONE_SHEAR:\n            timelines.push(readTimeline2(input, new ShearTimeline(frameCount, bezierCount, boneIndex), 1));\n            break;\n          case BONE_SHEARX:\n            timelines.push(readTimeline1(input, new ShearXTimeline(frameCount, bezierCount, boneIndex), 1));\n            break;\n          case BONE_SHEARY:\n            timelines.push(readTimeline1(input, new ShearYTimeline(frameCount, bezierCount, boneIndex), 1));\n        }\n      }\n    }\n    // IK constraint timelines.\n    for (let i = 0, n = input.readInt(true); i < n; i++) {\n      let index = input.readInt(true),\n        frameCount = input.readInt(true),\n        frameLast = frameCount - 1;\n      let timeline = new IkConstraintTimeline(frameCount, input.readInt(true), index);\n      let time = input.readFloat(),\n        mix = input.readFloat(),\n        softness = input.readFloat() * scale;\n      for (let frame = 0, bezier = 0;; frame++) {\n        timeline.setFrame(frame, time, mix, softness, input.readByte(), input.readBoolean(), input.readBoolean());\n        if (frame == frameLast) break;\n        let time2 = input.readFloat(),\n          mix2 = input.readFloat(),\n          softness2 = input.readFloat() * scale;\n        switch (input.readByte()) {\n          case CURVE_STEPPED:\n            timeline.setStepped(frame);\n            break;\n          case CURVE_BEZIER:\n            setBezier(input, timeline, bezier++, frame, 0, time, time2, mix, mix2, 1);\n            setBezier(input, timeline, bezier++, frame, 1, time, time2, softness, softness2, scale);\n        }\n        time = time2;\n        mix = mix2;\n        softness = softness2;\n      }\n      timelines.push(timeline);\n    }\n    // Transform constraint timelines.\n    for (let i = 0, n = input.readInt(true); i < n; i++) {\n      let index = input.readInt(true),\n        frameCount = input.readInt(true),\n        frameLast = frameCount - 1;\n      let timeline = new TransformConstraintTimeline(frameCount, input.readInt(true), index);\n      let time = input.readFloat(),\n        mixRotate = input.readFloat(),\n        mixX = input.readFloat(),\n        mixY = input.readFloat(),\n        mixScaleX = input.readFloat(),\n        mixScaleY = input.readFloat(),\n        mixShearY = input.readFloat();\n      for (let frame = 0, bezier = 0;; frame++) {\n        timeline.setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n        if (frame == frameLast) break;\n        let time2 = input.readFloat(),\n          mixRotate2 = input.readFloat(),\n          mixX2 = input.readFloat(),\n          mixY2 = input.readFloat(),\n          mixScaleX2 = input.readFloat(),\n          mixScaleY2 = input.readFloat(),\n          mixShearY2 = input.readFloat();\n        switch (input.readByte()) {\n          case CURVE_STEPPED:\n            timeline.setStepped(frame);\n            break;\n          case CURVE_BEZIER:\n            setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n            setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n            setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n            setBezier(input, timeline, bezier++, frame, 3, time, time2, mixScaleX, mixScaleX2, 1);\n            setBezier(input, timeline, bezier++, frame, 4, time, time2, mixScaleY, mixScaleY2, 1);\n            setBezier(input, timeline, bezier++, frame, 5, time, time2, mixShearY, mixShearY2, 1);\n        }\n        time = time2;\n        mixRotate = mixRotate2;\n        mixX = mixX2;\n        mixY = mixY2;\n        mixScaleX = mixScaleX2;\n        mixScaleY = mixScaleY2;\n        mixShearY = mixShearY2;\n      }\n      timelines.push(timeline);\n    }\n    // Path constraint timelines.\n    for (let i = 0, n = input.readInt(true); i < n; i++) {\n      let index = input.readInt(true);\n      let data = skeletonData.pathConstraints[index];\n      for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n        switch (input.readByte()) {\n          case PATH_POSITION:\n            timelines.push(readTimeline1(input, new PathConstraintPositionTimeline(input.readInt(true), input.readInt(true), index), data.positionMode == PositionMode.Fixed ? scale : 1));\n            break;\n          case PATH_SPACING:\n            timelines.push(readTimeline1(input, new PathConstraintSpacingTimeline(input.readInt(true), input.readInt(true), index), data.spacingMode == SpacingMode.Length || data.spacingMode == SpacingMode.Fixed ? scale : 1));\n            break;\n          case PATH_MIX:\n            let timeline = new PathConstraintMixTimeline(input.readInt(true), input.readInt(true), index);\n            let time = input.readFloat(),\n              mixRotate = input.readFloat(),\n              mixX = input.readFloat(),\n              mixY = input.readFloat();\n            for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n              timeline.setFrame(frame, time, mixRotate, mixX, mixY);\n              if (frame == frameLast) break;\n              let time2 = input.readFloat(),\n                mixRotate2 = input.readFloat(),\n                mixX2 = input.readFloat(),\n                mixY2 = input.readFloat();\n              switch (input.readByte()) {\n                case CURVE_STEPPED:\n                  timeline.setStepped(frame);\n                  break;\n                case CURVE_BEZIER:\n                  setBezier(input, timeline, bezier++, frame, 0, time, time2, mixRotate, mixRotate2, 1);\n                  setBezier(input, timeline, bezier++, frame, 1, time, time2, mixX, mixX2, 1);\n                  setBezier(input, timeline, bezier++, frame, 2, time, time2, mixY, mixY2, 1);\n              }\n              time = time2;\n              mixRotate = mixRotate2;\n              mixX = mixX2;\n              mixY = mixY2;\n            }\n            timelines.push(timeline);\n        }\n      }\n    }\n    // Deform timelines.\n    for (let i = 0, n = input.readInt(true); i < n; i++) {\n      let skin = skeletonData.skins[input.readInt(true)];\n      for (let ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n        let slotIndex = input.readInt(true);\n        for (let iii = 0, nnn = input.readInt(true); iii < nnn; iii++) {\n          let attachmentName = input.readStringRef();\n          if (!attachmentName) throw new Error(\"attachmentName must not be null.\");\n          let attachment = skin.getAttachment(slotIndex, attachmentName);\n          let timelineType = input.readByte();\n          let frameCount = input.readInt(true);\n          let frameLast = frameCount - 1;\n          switch (timelineType) {\n            case ATTACHMENT_DEFORM:\n              {\n                let vertexAttachment = attachment;\n                let weighted = vertexAttachment.bones;\n                let vertices = vertexAttachment.vertices;\n                let deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n                let bezierCount = input.readInt(true);\n                let timeline = new DeformTimeline(frameCount, bezierCount, slotIndex, vertexAttachment);\n                let time = input.readFloat();\n                for (let frame = 0, bezier = 0;; frame++) {\n                  let deform;\n                  let end = input.readInt(true);\n                  if (end == 0) deform = weighted ? Utils.newFloatArray(deformLength) : vertices;else {\n                    deform = Utils.newFloatArray(deformLength);\n                    let start = input.readInt(true);\n                    end += start;\n                    if (scale == 1) {\n                      for (let v = start; v < end; v++) deform[v] = input.readFloat();\n                    } else {\n                      for (let v = start; v < end; v++) deform[v] = input.readFloat() * scale;\n                    }\n                    if (!weighted) {\n                      for (let v = 0, vn = deform.length; v < vn; v++) deform[v] += vertices[v];\n                    }\n                  }\n                  timeline.setFrame(frame, time, deform);\n                  if (frame == frameLast) break;\n                  let time2 = input.readFloat();\n                  switch (input.readByte()) {\n                    case CURVE_STEPPED:\n                      timeline.setStepped(frame);\n                      break;\n                    case CURVE_BEZIER:\n                      setBezier(input, timeline, bezier++, frame, 0, time, time2, 0, 1, 1);\n                  }\n                  time = time2;\n                }\n                timelines.push(timeline);\n                break;\n              }\n            case ATTACHMENT_SEQUENCE:\n              {\n                let timeline = new SequenceTimeline(frameCount, slotIndex, attachment);\n                for (let frame = 0; frame < frameCount; frame++) {\n                  let time = input.readFloat();\n                  let modeAndIndex = input.readInt32();\n                  timeline.setFrame(frame, time, SequenceModeValues[modeAndIndex & 0xf], modeAndIndex >> 4, input.readFloat());\n                }\n                timelines.push(timeline);\n                break;\n              }\n          }\n        }\n      }\n    }\n    // Draw order timeline.\n    let drawOrderCount = input.readInt(true);\n    if (drawOrderCount > 0) {\n      let timeline = new DrawOrderTimeline(drawOrderCount);\n      let slotCount = skeletonData.slots.length;\n      for (let i = 0; i < drawOrderCount; i++) {\n        let time = input.readFloat();\n        let offsetCount = input.readInt(true);\n        let drawOrder = Utils.newArray(slotCount, 0);\n        for (let ii = slotCount - 1; ii >= 0; ii--) drawOrder[ii] = -1;\n        let unchanged = Utils.newArray(slotCount - offsetCount, 0);\n        let originalIndex = 0,\n          unchangedIndex = 0;\n        for (let ii = 0; ii < offsetCount; ii++) {\n          let slotIndex = input.readInt(true);\n          // Collect unchanged items.\n          while (originalIndex != slotIndex) unchanged[unchangedIndex++] = originalIndex++;\n          // Set changed items.\n          drawOrder[originalIndex + input.readInt(true)] = originalIndex++;\n        }\n        // Collect remaining unchanged items.\n        while (originalIndex < slotCount) unchanged[unchangedIndex++] = originalIndex++;\n        // Fill in unchanged items.\n        for (let ii = slotCount - 1; ii >= 0; ii--) if (drawOrder[ii] == -1) drawOrder[ii] = unchanged[--unchangedIndex];\n        timeline.setFrame(i, time, drawOrder);\n      }\n      timelines.push(timeline);\n    }\n    // Event timeline.\n    let eventCount = input.readInt(true);\n    if (eventCount > 0) {\n      let timeline = new EventTimeline(eventCount);\n      for (let i = 0; i < eventCount; i++) {\n        let time = input.readFloat();\n        let eventData = skeletonData.events[input.readInt(true)];\n        let event = new Event(time, eventData);\n        event.intValue = input.readInt(false);\n        event.floatValue = input.readFloat();\n        event.stringValue = input.readBoolean() ? input.readString() : eventData.stringValue;\n        if (event.data.audioPath) {\n          event.volume = input.readFloat();\n          event.balance = input.readFloat();\n        }\n        timeline.setFrame(i, event);\n      }\n      timelines.push(timeline);\n    }\n    let duration = 0;\n    for (let i = 0, n = timelines.length; i < n; i++) duration = Math.max(duration, timelines[i].getDuration());\n    return new Animation(name, timelines, duration);\n  }\n}\nexport class BinaryInput {\n  constructor(data, strings = new Array(), index = 0, buffer = new DataView(data.buffer)) {\n    _defineProperty(this, \"strings\", void 0);\n    _defineProperty(this, \"index\", void 0);\n    _defineProperty(this, \"buffer\", void 0);\n    this.strings = strings;\n    this.index = index;\n    this.buffer = buffer;\n  }\n  readByte() {\n    return this.buffer.getInt8(this.index++);\n  }\n  readUnsignedByte() {\n    return this.buffer.getUint8(this.index++);\n  }\n  readShort() {\n    let value = this.buffer.getInt16(this.index);\n    this.index += 2;\n    return value;\n  }\n  readInt32() {\n    let value = this.buffer.getInt32(this.index);\n    this.index += 4;\n    return value;\n  }\n  readInt(optimizePositive) {\n    let b = this.readByte();\n    let result = b & 0x7F;\n    if ((b & 0x80) != 0) {\n      b = this.readByte();\n      result |= (b & 0x7F) << 7;\n      if ((b & 0x80) != 0) {\n        b = this.readByte();\n        result |= (b & 0x7F) << 14;\n        if ((b & 0x80) != 0) {\n          b = this.readByte();\n          result |= (b & 0x7F) << 21;\n          if ((b & 0x80) != 0) {\n            b = this.readByte();\n            result |= (b & 0x7F) << 28;\n          }\n        }\n      }\n    }\n    return optimizePositive ? result : result >>> 1 ^ -(result & 1);\n  }\n  readStringRef() {\n    let index = this.readInt(true);\n    return index == 0 ? null : this.strings[index - 1];\n  }\n  readString() {\n    let byteCount = this.readInt(true);\n    switch (byteCount) {\n      case 0:\n        return null;\n      case 1:\n        return \"\";\n    }\n    byteCount--;\n    let chars = \"\";\n    let charCount = 0;\n    for (let i = 0; i < byteCount;) {\n      let b = this.readUnsignedByte();\n      switch (b >> 4) {\n        case 12:\n        case 13:\n          chars += String.fromCharCode((b & 0x1F) << 6 | this.readByte() & 0x3F);\n          i += 2;\n          break;\n        case 14:\n          chars += String.fromCharCode((b & 0x0F) << 12 | (this.readByte() & 0x3F) << 6 | this.readByte() & 0x3F);\n          i += 3;\n          break;\n        default:\n          chars += String.fromCharCode(b);\n          i++;\n      }\n    }\n    return chars;\n  }\n  readFloat() {\n    let value = this.buffer.getFloat32(this.index);\n    this.index += 4;\n    return value;\n  }\n  readBoolean() {\n    return this.readByte() != 0;\n  }\n}\nclass LinkedMesh {\n  constructor(mesh, skin, slotIndex, parent, inheritDeform) {\n    _defineProperty(this, \"parent\", void 0);\n    _defineProperty(this, \"skin\", void 0);\n    _defineProperty(this, \"slotIndex\", void 0);\n    _defineProperty(this, \"mesh\", void 0);\n    _defineProperty(this, \"inheritTimeline\", void 0);\n    this.mesh = mesh;\n    this.skin = skin;\n    this.slotIndex = slotIndex;\n    this.parent = parent;\n    this.inheritTimeline = inheritDeform;\n  }\n}\nclass Vertices {\n  constructor(bones = null, vertices = null) {\n    _defineProperty(this, \"bones\", void 0);\n    _defineProperty(this, \"vertices\", void 0);\n    this.bones = bones;\n    this.vertices = vertices;\n  }\n}\nvar AttachmentType;\n(function (AttachmentType) {\n  AttachmentType[AttachmentType[\"Region\"] = 0] = \"Region\";\n  AttachmentType[AttachmentType[\"BoundingBox\"] = 1] = \"BoundingBox\";\n  AttachmentType[AttachmentType[\"Mesh\"] = 2] = \"Mesh\";\n  AttachmentType[AttachmentType[\"LinkedMesh\"] = 3] = \"LinkedMesh\";\n  AttachmentType[AttachmentType[\"Path\"] = 4] = \"Path\";\n  AttachmentType[AttachmentType[\"Point\"] = 5] = \"Point\";\n  AttachmentType[AttachmentType[\"Clipping\"] = 6] = \"Clipping\";\n})(AttachmentType || (AttachmentType = {}));\nfunction readTimeline1(input, timeline, scale) {\n  let time = input.readFloat(),\n    value = input.readFloat() * scale;\n  for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n    timeline.setFrame(frame, time, value);\n    if (frame == frameLast) break;\n    let time2 = input.readFloat(),\n      value2 = input.readFloat() * scale;\n    switch (input.readByte()) {\n      case CURVE_STEPPED:\n        timeline.setStepped(frame);\n        break;\n      case CURVE_BEZIER:\n        setBezier(input, timeline, bezier++, frame, 0, time, time2, value, value2, scale);\n    }\n    time = time2;\n    value = value2;\n  }\n  return timeline;\n}\nfunction readTimeline2(input, timeline, scale) {\n  let time = input.readFloat(),\n    value1 = input.readFloat() * scale,\n    value2 = input.readFloat() * scale;\n  for (let frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n    timeline.setFrame(frame, time, value1, value2);\n    if (frame == frameLast) break;\n    let time2 = input.readFloat(),\n      nvalue1 = input.readFloat() * scale,\n      nvalue2 = input.readFloat() * scale;\n    switch (input.readByte()) {\n      case CURVE_STEPPED:\n        timeline.setStepped(frame);\n        break;\n      case CURVE_BEZIER:\n        setBezier(input, timeline, bezier++, frame, 0, time, time2, value1, nvalue1, scale);\n        setBezier(input, timeline, bezier++, frame, 1, time, time2, value2, nvalue2, scale);\n    }\n    time = time2;\n    value1 = nvalue1;\n    value2 = nvalue2;\n  }\n  return timeline;\n}\nfunction setBezier(input, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n  timeline.setBezier(bezier, frame, value, time1, value1, input.readFloat(), input.readFloat() * scale, input.readFloat(), input.readFloat() * scale, time2, value2);\n}\nconst BONE_ROTATE = 0;\nconst BONE_TRANSLATE = 1;\nconst BONE_TRANSLATEX = 2;\nconst BONE_TRANSLATEY = 3;\nconst BONE_SCALE = 4;\nconst BONE_SCALEX = 5;\nconst BONE_SCALEY = 6;\nconst BONE_SHEAR = 7;\nconst BONE_SHEARX = 8;\nconst BONE_SHEARY = 9;\nconst SLOT_ATTACHMENT = 0;\nconst SLOT_RGBA = 1;\nconst SLOT_RGB = 2;\nconst SLOT_RGBA2 = 3;\nconst SLOT_RGB2 = 4;\nconst SLOT_ALPHA = 5;\nconst ATTACHMENT_DEFORM = 0;\nconst ATTACHMENT_SEQUENCE = 1;\nconst PATH_POSITION = 0;\nconst PATH_SPACING = 1;\nconst PATH_MIX = 2;\nconst CURVE_LINEAR = 0;\nconst CURVE_STEPPED = 1;\nconst CURVE_BEZIER = 2;","map":{"version":3,"names":["Animation","AttachmentTimeline","RGBATimeline","RGBTimeline","RGBA2Timeline","RGB2Timeline","AlphaTimeline","RotateTimeline","TranslateTimeline","TranslateXTimeline","TranslateYTimeline","ScaleTimeline","ScaleXTimeline","ScaleYTimeline","ShearTimeline","ShearXTimeline","ShearYTimeline","IkConstraintTimeline","TransformConstraintTimeline","PathConstraintPositionTimeline","PathConstraintSpacingTimeline","PathConstraintMixTimeline","DeformTimeline","DrawOrderTimeline","EventTimeline","SequenceTimeline","Sequence","SequenceModeValues","BoneData","Event","EventData","IkConstraintData","PathConstraintData","PositionMode","SpacingMode","SkeletonData","Skin","SlotData","TransformConstraintData","Color","Utils","SkeletonBinary","constructor","attachmentLoader","_defineProperty","Array","readSkeletonData","binary","scale","skeletonData","name","input","BinaryInput","lowHash","readInt32","highHash","hash","toString","version","readString","x","readFloat","y","width","height","nonessential","readBoolean","fps","imagesPath","audioPath","n","readInt","i","str","Error","strings","push","parent","bones","data","rotation","scaleX","scaleY","shearX","shearY","length","transformMode","skinRequired","rgba8888ToColor","color","slotName","boneData","darkColor","rgb888ToColor","attachmentName","readStringRef","blendMode","slots","nn","order","ii","target","mix","softness","bendDirection","readByte","compress","stretch","uniform","ikConstraints","local","relative","offsetRotation","offsetX","offsetY","offsetScaleX","offsetScaleY","offsetShearY","mixRotate","mixX","mixY","mixScaleX","mixScaleY","mixShearY","transformConstraints","positionMode","spacingMode","rotateMode","position","Fixed","spacing","Length","pathConstraints","defaultSkin","readSkin","skins","setArraySize","skin","linkedMeshes","linkedMesh","findSkin","getAttachment","slotIndex","mesh","timelineAttachment","inheritTimeline","setParentMesh","region","updateRegion","eventName","intValue","floatValue","stringValue","volume","balance","events","animationName","animations","readAnimation","slotCount","skinName","constraints","attachment","readAttachment","setAttachment","AttachmentType","Region","path","sequence","readSequence","newRegionAttachment","BoundingBox","vertexCount","vertices","readVertices","box","newBoundingBoxAttachment","worldVerticesLength","Mesh","uvs","readFloatArray","triangles","readShortArray","hullLength","edges","newMeshAttachment","regionUVs","LinkedMesh","inheritTimelines","Path","closed","constantSpeed","lengths","newArray","newPathAttachment","Point","point","newPointAttachment","Clipping","endSlotIndex","clip","newClippingAttachment","endSlot","start","digits","setupIndex","verticesLength","Vertices","weights","bonesArray","boneCount","toFloatArray","array","readShort","timelines","tempColor1","tempColor2","timelineType","frameCount","frameLast","SLOT_ATTACHMENT","timeline","frame","setFrame","SLOT_RGBA","bezierCount","time","r","readUnsignedByte","g","b","a","bezier","time2","r2","g2","b2","a2","CURVE_STEPPED","setStepped","CURVE_BEZIER","setBezier","SLOT_RGB","SLOT_RGBA2","nr","ng","nb","na","nr2","ng2","nb2","SLOT_RGB2","SLOT_ALPHA","boneIndex","type","BONE_ROTATE","readTimeline1","BONE_TRANSLATE","readTimeline2","BONE_TRANSLATEX","BONE_TRANSLATEY","BONE_SCALE","BONE_SCALEX","BONE_SCALEY","BONE_SHEAR","BONE_SHEARX","BONE_SHEARY","index","mix2","softness2","mixRotate2","mixX2","mixY2","mixScaleX2","mixScaleY2","mixShearY2","PATH_POSITION","PATH_SPACING","PATH_MIX","getFrameCount","iii","nnn","ATTACHMENT_DEFORM","vertexAttachment","weighted","deformLength","deform","end","newFloatArray","v","vn","ATTACHMENT_SEQUENCE","modeAndIndex","drawOrderCount","offsetCount","drawOrder","unchanged","originalIndex","unchangedIndex","eventCount","eventData","event","duration","Math","max","getDuration","buffer","DataView","getInt8","getUint8","value","getInt16","getInt32","optimizePositive","result","byteCount","chars","charCount","String","fromCharCode","getFloat32","inheritDeform","value2","value1","nvalue1","nvalue2","time1","CURVE_LINEAR"],"sources":["../src/SkeletonBinary.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}