{"ast":null,"code":"import _defineProperty from \"/Users/divya/Documents/vue-2024-spine/vue-20240spine/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { Vector2, MathUtils } from \"./Utils.js\";\n/** Stores the current pose for a transform constraint. A transform constraint adjusts the world transform of the constrained\n * bones to match that of the target bone.\n *\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nexport class TransformConstraint {\n  constructor(data, skeleton) {\n    /** The transform constraint's setup pose data. */\n    _defineProperty(this, \"data\", void 0);\n    /** The bones that will be modified by this transform constraint. */\n    _defineProperty(this, \"bones\", void 0);\n    /** The target bone whose world transform will be copied to the constrained bones. */\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"mixRotate\", 0);\n    _defineProperty(this, \"mixX\", 0);\n    _defineProperty(this, \"mixY\", 0);\n    _defineProperty(this, \"mixScaleX\", 0);\n    _defineProperty(this, \"mixScaleY\", 0);\n    _defineProperty(this, \"mixShearY\", 0);\n    _defineProperty(this, \"temp\", new Vector2());\n    _defineProperty(this, \"active\", false);\n    if (!data) throw new Error(\"data cannot be null.\");\n    if (!skeleton) throw new Error(\"skeleton cannot be null.\");\n    this.data = data;\n    this.mixRotate = data.mixRotate;\n    this.mixX = data.mixX;\n    this.mixY = data.mixY;\n    this.mixScaleX = data.mixScaleX;\n    this.mixScaleY = data.mixScaleY;\n    this.mixShearY = data.mixShearY;\n    this.bones = new Array();\n    for (let i = 0; i < data.bones.length; i++) {\n      let bone = skeleton.findBone(data.bones[i].name);\n      if (!bone) throw new Error(`Couldn't find bone ${data.bones[i].name}.`);\n      this.bones.push(bone);\n    }\n    let target = skeleton.findBone(data.target.name);\n    if (!target) throw new Error(`Couldn't find target bone ${data.target.name}.`);\n    this.target = target;\n  }\n  isActive() {\n    return this.active;\n  }\n  update() {\n    if (this.mixRotate == 0 && this.mixX == 0 && this.mixY == 0 && this.mixScaleX == 0 && this.mixScaleY == 0 && this.mixShearY == 0) return;\n    if (this.data.local) {\n      if (this.data.relative) this.applyRelativeLocal();else this.applyAbsoluteLocal();\n    } else {\n      if (this.data.relative) this.applyRelativeWorld();else this.applyAbsoluteWorld();\n    }\n  }\n  applyAbsoluteWorld() {\n    let mixRotate = this.mixRotate,\n      mixX = this.mixX,\n      mixY = this.mixY,\n      mixScaleX = this.mixScaleX,\n      mixScaleY = this.mixScaleY,\n      mixShearY = this.mixShearY;\n    let translate = mixX != 0 || mixY != 0;\n    let target = this.target;\n    let ta = target.a,\n      tb = target.b,\n      tc = target.c,\n      td = target.d;\n    let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n    let offsetRotation = this.data.offsetRotation * degRadReflect;\n    let offsetShearY = this.data.offsetShearY * degRadReflect;\n    let bones = this.bones;\n    for (let i = 0, n = bones.length; i < n; i++) {\n      let bone = bones[i];\n      if (mixRotate != 0) {\n        let a = bone.a,\n          b = bone.b,\n          c = bone.c,\n          d = bone.d;\n        let r = Math.atan2(tc, ta) - Math.atan2(c, a) + offsetRotation;\n        if (r > MathUtils.PI) r -= MathUtils.PI2;else if (r < -MathUtils.PI)\n          //\n          r += MathUtils.PI2;\n        r *= mixRotate;\n        let cos = Math.cos(r),\n          sin = Math.sin(r);\n        bone.a = cos * a - sin * c;\n        bone.b = cos * b - sin * d;\n        bone.c = sin * a + cos * c;\n        bone.d = sin * b + cos * d;\n      }\n      if (translate) {\n        let temp = this.temp;\n        target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n        bone.worldX += (temp.x - bone.worldX) * mixX;\n        bone.worldY += (temp.y - bone.worldY) * mixY;\n      }\n      if (mixScaleX != 0) {\n        let s = Math.sqrt(bone.a * bone.a + bone.c * bone.c);\n        if (s != 0) s = (s + (Math.sqrt(ta * ta + tc * tc) - s + this.data.offsetScaleX) * mixScaleX) / s;\n        bone.a *= s;\n        bone.c *= s;\n      }\n      if (mixScaleY != 0) {\n        let s = Math.sqrt(bone.b * bone.b + bone.d * bone.d);\n        if (s != 0) s = (s + (Math.sqrt(tb * tb + td * td) - s + this.data.offsetScaleY) * mixScaleY) / s;\n        bone.b *= s;\n        bone.d *= s;\n      }\n      if (mixShearY > 0) {\n        let b = bone.b,\n          d = bone.d;\n        let by = Math.atan2(d, b);\n        let r = Math.atan2(td, tb) - Math.atan2(tc, ta) - (by - Math.atan2(bone.c, bone.a));\n        if (r > MathUtils.PI) r -= MathUtils.PI2;else if (r < -MathUtils.PI)\n          //\n          r += MathUtils.PI2;\n        r = by + (r + offsetShearY) * mixShearY;\n        let s = Math.sqrt(b * b + d * d);\n        bone.b = Math.cos(r) * s;\n        bone.d = Math.sin(r) * s;\n      }\n      bone.updateAppliedTransform();\n    }\n  }\n  applyRelativeWorld() {\n    let mixRotate = this.mixRotate,\n      mixX = this.mixX,\n      mixY = this.mixY,\n      mixScaleX = this.mixScaleX,\n      mixScaleY = this.mixScaleY,\n      mixShearY = this.mixShearY;\n    let translate = mixX != 0 || mixY != 0;\n    let target = this.target;\n    let ta = target.a,\n      tb = target.b,\n      tc = target.c,\n      td = target.d;\n    let degRadReflect = ta * td - tb * tc > 0 ? MathUtils.degRad : -MathUtils.degRad;\n    let offsetRotation = this.data.offsetRotation * degRadReflect,\n      offsetShearY = this.data.offsetShearY * degRadReflect;\n    let bones = this.bones;\n    for (let i = 0, n = bones.length; i < n; i++) {\n      let bone = bones[i];\n      if (mixRotate != 0) {\n        let a = bone.a,\n          b = bone.b,\n          c = bone.c,\n          d = bone.d;\n        let r = Math.atan2(tc, ta) + offsetRotation;\n        if (r > MathUtils.PI) r -= MathUtils.PI2;else if (r < -MathUtils.PI)\n          //\n          r += MathUtils.PI2;\n        r *= mixRotate;\n        let cos = Math.cos(r),\n          sin = Math.sin(r);\n        bone.a = cos * a - sin * c;\n        bone.b = cos * b - sin * d;\n        bone.c = sin * a + cos * c;\n        bone.d = sin * b + cos * d;\n      }\n      if (translate) {\n        let temp = this.temp;\n        target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n        bone.worldX += temp.x * mixX;\n        bone.worldY += temp.y * mixY;\n      }\n      if (mixScaleX != 0) {\n        let s = (Math.sqrt(ta * ta + tc * tc) - 1 + this.data.offsetScaleX) * mixScaleX + 1;\n        bone.a *= s;\n        bone.c *= s;\n      }\n      if (mixScaleY != 0) {\n        let s = (Math.sqrt(tb * tb + td * td) - 1 + this.data.offsetScaleY) * mixScaleY + 1;\n        bone.b *= s;\n        bone.d *= s;\n      }\n      if (mixShearY > 0) {\n        let r = Math.atan2(td, tb) - Math.atan2(tc, ta);\n        if (r > MathUtils.PI) r -= MathUtils.PI2;else if (r < -MathUtils.PI)\n          //\n          r += MathUtils.PI2;\n        let b = bone.b,\n          d = bone.d;\n        r = Math.atan2(d, b) + (r - MathUtils.PI / 2 + offsetShearY) * mixShearY;\n        let s = Math.sqrt(b * b + d * d);\n        bone.b = Math.cos(r) * s;\n        bone.d = Math.sin(r) * s;\n      }\n      bone.updateAppliedTransform();\n    }\n  }\n  applyAbsoluteLocal() {\n    let mixRotate = this.mixRotate,\n      mixX = this.mixX,\n      mixY = this.mixY,\n      mixScaleX = this.mixScaleX,\n      mixScaleY = this.mixScaleY,\n      mixShearY = this.mixShearY;\n    let target = this.target;\n    let bones = this.bones;\n    for (let i = 0, n = bones.length; i < n; i++) {\n      let bone = bones[i];\n      let rotation = bone.arotation;\n      if (mixRotate != 0) {\n        let r = target.arotation - rotation + this.data.offsetRotation;\n        r -= (16384 - (16384.499999999996 - r / 360 | 0)) * 360;\n        rotation += r * mixRotate;\n      }\n      let x = bone.ax,\n        y = bone.ay;\n      x += (target.ax - x + this.data.offsetX) * mixX;\n      y += (target.ay - y + this.data.offsetY) * mixY;\n      let scaleX = bone.ascaleX,\n        scaleY = bone.ascaleY;\n      if (mixScaleX != 0 && scaleX != 0) scaleX = (scaleX + (target.ascaleX - scaleX + this.data.offsetScaleX) * mixScaleX) / scaleX;\n      if (mixScaleY != 0 && scaleY != 0) scaleY = (scaleY + (target.ascaleY - scaleY + this.data.offsetScaleY) * mixScaleY) / scaleY;\n      let shearY = bone.ashearY;\n      if (mixShearY != 0) {\n        let r = target.ashearY - shearY + this.data.offsetShearY;\n        r -= (16384 - (16384.499999999996 - r / 360 | 0)) * 360;\n        shearY += r * mixShearY;\n      }\n      bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n    }\n  }\n  applyRelativeLocal() {\n    let mixRotate = this.mixRotate,\n      mixX = this.mixX,\n      mixY = this.mixY,\n      mixScaleX = this.mixScaleX,\n      mixScaleY = this.mixScaleY,\n      mixShearY = this.mixShearY;\n    let target = this.target;\n    let bones = this.bones;\n    for (let i = 0, n = bones.length; i < n; i++) {\n      let bone = bones[i];\n      let rotation = bone.arotation + (target.arotation + this.data.offsetRotation) * mixRotate;\n      let x = bone.ax + (target.ax + this.data.offsetX) * mixX;\n      let y = bone.ay + (target.ay + this.data.offsetY) * mixY;\n      let scaleX = bone.ascaleX * ((target.ascaleX - 1 + this.data.offsetScaleX) * mixScaleX + 1);\n      let scaleY = bone.ascaleY * ((target.ascaleY - 1 + this.data.offsetScaleY) * mixScaleY + 1);\n      let shearY = bone.ashearY + (target.ashearY + this.data.offsetShearY) * mixShearY;\n      bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n    }\n  }\n}","map":{"version":3,"names":["Vector2","MathUtils","TransformConstraint","constructor","data","skeleton","_defineProperty","Error","mixRotate","mixX","mixY","mixScaleX","mixScaleY","mixShearY","bones","Array","i","length","bone","findBone","name","push","target","isActive","active","update","local","relative","applyRelativeLocal","applyAbsoluteLocal","applyRelativeWorld","applyAbsoluteWorld","translate","ta","a","tb","b","tc","c","td","d","degRadReflect","degRad","offsetRotation","offsetShearY","n","r","Math","atan2","PI","PI2","cos","sin","temp","localToWorld","set","offsetX","offsetY","worldX","x","worldY","y","s","sqrt","offsetScaleX","offsetScaleY","by","updateAppliedTransform","rotation","arotation","ax","ay","scaleX","ascaleX","scaleY","ascaleY","shearY","ashearY","updateWorldTransformWith","ashearX"],"sources":["../src/TransformConstraint.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}