{"ast":null,"code":"import _defineProperty from \"/Users/divya/Documents/vue-2024-spine/vue-20240spine/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.push.js\";\n/******************************************************************************\n * Spine Runtimes License Agreement\n * Last updated July 28, 2023. Replaces all prior versions.\n *\n * Copyright (c) 2013-2023, Esoteric Software LLC\n *\n * Integration of the Spine Runtimes into software or otherwise creating\n * derivative works of the Spine Runtimes is permitted under the terms and\n * conditions of Section 2 of the Spine Editor License Agreement:\n * http://esotericsoftware.com/spine-editor-license\n *\n * Otherwise, it is permitted to integrate the Spine Runtimes into software or\n * otherwise create derivative works of the Spine Runtimes (collectively,\n * \"Products\"), provided that each user of the Products must obtain their own\n * Spine Editor license and redistribution of the Products in any form must\n * include this license and copyright notice.\n *\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THE\n * SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *****************************************************************************/\nimport { TransformMode } from \"./BoneData.js\";\nimport { MathUtils } from \"./Utils.js\";\n/** Stores the current pose for an IK constraint. An IK constraint adjusts the rotation of 1 or 2 constrained bones so the tip of\n * the last bone is as close to the target bone as possible.\n *\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nexport class IkConstraint {\n  constructor(data, skeleton) {\n    /** The IK constraint's setup pose data. */\n    _defineProperty(this, \"data\", void 0);\n    /** The bones that will be modified by this IK constraint. */\n    _defineProperty(this, \"bones\", void 0);\n    /** The bone that is the IK target. */\n    _defineProperty(this, \"target\", void 0);\n    /** Controls the bend direction of the IK bones, either 1 or -1. */\n    _defineProperty(this, \"bendDirection\", 0);\n    /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n    _defineProperty(this, \"compress\", false);\n    /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\n     * and the parent bone has local nonuniform scale, stretch is not applied. */\n    _defineProperty(this, \"stretch\", false);\n    /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n    _defineProperty(this, \"mix\", 1);\n    /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n    _defineProperty(this, \"softness\", 0);\n    _defineProperty(this, \"active\", false);\n    if (!data) throw new Error(\"data cannot be null.\");\n    if (!skeleton) throw new Error(\"skeleton cannot be null.\");\n    this.data = data;\n    this.mix = data.mix;\n    this.softness = data.softness;\n    this.bendDirection = data.bendDirection;\n    this.compress = data.compress;\n    this.stretch = data.stretch;\n    this.bones = new Array();\n    for (let i = 0; i < data.bones.length; i++) {\n      let bone = skeleton.findBone(data.bones[i].name);\n      if (!bone) throw new Error(`Couldn't find bone ${data.bones[i].name}`);\n      this.bones.push(bone);\n    }\n    let target = skeleton.findBone(data.target.name);\n    if (!target) throw new Error(`Couldn't find bone ${data.target.name}`);\n    this.target = target;\n  }\n  isActive() {\n    return this.active;\n  }\n  update() {\n    if (this.mix == 0) return;\n    let target = this.target;\n    let bones = this.bones;\n    switch (bones.length) {\n      case 1:\n        this.apply1(bones[0], target.worldX, target.worldY, this.compress, this.stretch, this.data.uniform, this.mix);\n        break;\n      case 2:\n        this.apply2(bones[0], bones[1], target.worldX, target.worldY, this.bendDirection, this.stretch, this.data.uniform, this.softness, this.mix);\n        break;\n    }\n  }\n  /** Applies 1 bone IK. The target is specified in the world coordinate system. */\n  apply1(bone, targetX, targetY, compress, stretch, uniform, alpha) {\n    let p = bone.parent;\n    if (!p) throw new Error(\"IK bone must have parent.\");\n    let pa = p.a,\n      pb = p.b,\n      pc = p.c,\n      pd = p.d;\n    let rotationIK = -bone.ashearX - bone.arotation,\n      tx = 0,\n      ty = 0;\n    switch (bone.data.transformMode) {\n      case TransformMode.OnlyTranslation:\n        tx = (targetX - bone.worldX) * MathUtils.signum(bone.skeleton.scaleX);\n        ty = (targetY - bone.worldY) * MathUtils.signum(bone.skeleton.scaleY);\n        break;\n      case TransformMode.NoRotationOrReflection:\n        let s = Math.abs(pa * pd - pb * pc) / Math.max(0.0001, pa * pa + pc * pc);\n        let sa = pa / bone.skeleton.scaleX;\n        let sc = pc / bone.skeleton.scaleY;\n        pb = -sc * s * bone.skeleton.scaleX;\n        pd = sa * s * bone.skeleton.scaleY;\n        rotationIK += Math.atan2(sc, sa) * MathUtils.radDeg;\n      // Fall through\n      default:\n        let x = targetX - p.worldX,\n          y = targetY - p.worldY;\n        let d = pa * pd - pb * pc;\n        if (Math.abs(d) <= 0.0001) {\n          tx = 0;\n          ty = 0;\n        } else {\n          tx = (x * pd - y * pb) / d - bone.ax;\n          ty = (y * pa - x * pc) / d - bone.ay;\n        }\n    }\n    rotationIK += Math.atan2(ty, tx) * MathUtils.radDeg;\n    if (bone.ascaleX < 0) rotationIK += 180;\n    if (rotationIK > 180) rotationIK -= 360;else if (rotationIK < -180) rotationIK += 360;\n    let sx = bone.ascaleX,\n      sy = bone.ascaleY;\n    if (compress || stretch) {\n      switch (bone.data.transformMode) {\n        case TransformMode.NoScale:\n        case TransformMode.NoScaleOrReflection:\n          tx = targetX - bone.worldX;\n          ty = targetY - bone.worldY;\n      }\n      let b = bone.data.length * sx,\n        dd = Math.sqrt(tx * tx + ty * ty);\n      if (compress && dd < b || stretch && dd > b && b > 0.0001) {\n        let s = (dd / b - 1) * alpha + 1;\n        sx *= s;\n        if (uniform) sy *= s;\n      }\n    }\n    bone.updateWorldTransformWith(bone.ax, bone.ay, bone.arotation + rotationIK * alpha, sx, sy, bone.ashearX, bone.ashearY);\n  }\n  /** Applies 2 bone IK. The target is specified in the world coordinate system.\n   * @param child A direct descendant of the parent bone. */\n  apply2(parent, child, targetX, targetY, bendDir, stretch, uniform, softness, alpha) {\n    let px = parent.ax,\n      py = parent.ay,\n      psx = parent.ascaleX,\n      psy = parent.ascaleY,\n      sx = psx,\n      sy = psy,\n      csx = child.ascaleX;\n    let os1 = 0,\n      os2 = 0,\n      s2 = 0;\n    if (psx < 0) {\n      psx = -psx;\n      os1 = 180;\n      s2 = -1;\n    } else {\n      os1 = 0;\n      s2 = 1;\n    }\n    if (psy < 0) {\n      psy = -psy;\n      s2 = -s2;\n    }\n    if (csx < 0) {\n      csx = -csx;\n      os2 = 180;\n    } else os2 = 0;\n    let cx = child.ax,\n      cy = 0,\n      cwx = 0,\n      cwy = 0,\n      a = parent.a,\n      b = parent.b,\n      c = parent.c,\n      d = parent.d;\n    let u = Math.abs(psx - psy) <= 0.0001;\n    if (!u || stretch) {\n      cy = 0;\n      cwx = a * cx + parent.worldX;\n      cwy = c * cx + parent.worldY;\n    } else {\n      cy = child.ay;\n      cwx = a * cx + b * cy + parent.worldX;\n      cwy = c * cx + d * cy + parent.worldY;\n    }\n    let pp = parent.parent;\n    if (!pp) throw new Error(\"IK parent must itself have a parent.\");\n    a = pp.a;\n    b = pp.b;\n    c = pp.c;\n    d = pp.d;\n    let id = a * d - b * c,\n      x = cwx - pp.worldX,\n      y = cwy - pp.worldY;\n    id = Math.abs(id) <= 0.0001 ? 0 : 1 / id;\n    let dx = (x * d - y * b) * id - px,\n      dy = (y * a - x * c) * id - py;\n    let l1 = Math.sqrt(dx * dx + dy * dy),\n      l2 = child.data.length * csx,\n      a1,\n      a2;\n    if (l1 < 0.0001) {\n      this.apply1(parent, targetX, targetY, false, stretch, false, alpha);\n      child.updateWorldTransformWith(cx, cy, 0, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n      return;\n    }\n    x = targetX - pp.worldX;\n    y = targetY - pp.worldY;\n    let tx = (x * d - y * b) * id - px,\n      ty = (y * a - x * c) * id - py;\n    let dd = tx * tx + ty * ty;\n    if (softness != 0) {\n      softness *= psx * (csx + 1) * 0.5;\n      let td = Math.sqrt(dd),\n        sd = td - l1 - l2 * psx + softness;\n      if (sd > 0) {\n        let p = Math.min(1, sd / (softness * 2)) - 1;\n        p = (sd - softness * (1 - p * p)) / td;\n        tx -= p * tx;\n        ty -= p * ty;\n        dd = tx * tx + ty * ty;\n      }\n    }\n    outer: if (u) {\n      l2 *= psx;\n      let cos = (dd - l1 * l1 - l2 * l2) / (2 * l1 * l2);\n      if (cos < -1) {\n        cos = -1;\n        a2 = Math.PI * bendDir;\n      } else if (cos > 1) {\n        cos = 1;\n        a2 = 0;\n        if (stretch) {\n          a = (Math.sqrt(dd) / (l1 + l2) - 1) * alpha + 1;\n          sx *= a;\n          if (uniform) sy *= a;\n        }\n      } else a2 = Math.acos(cos) * bendDir;\n      a = l1 + l2 * cos;\n      b = l2 * Math.sin(a2);\n      a1 = Math.atan2(ty * a - tx * b, tx * a + ty * b);\n    } else {\n      a = psx * l2;\n      b = psy * l2;\n      let aa = a * a,\n        bb = b * b,\n        ta = Math.atan2(ty, tx);\n      c = bb * l1 * l1 + aa * dd - aa * bb;\n      let c1 = -2 * bb * l1,\n        c2 = bb - aa;\n      d = c1 * c1 - 4 * c2 * c;\n      if (d >= 0) {\n        let q = Math.sqrt(d);\n        if (c1 < 0) q = -q;\n        q = -(c1 + q) * 0.5;\n        let r0 = q / c2,\n          r1 = c / q;\n        let r = Math.abs(r0) < Math.abs(r1) ? r0 : r1;\n        if (r * r <= dd) {\n          y = Math.sqrt(dd - r * r) * bendDir;\n          a1 = ta - Math.atan2(y, r);\n          a2 = Math.atan2(y / psy, (r - l1) / psx);\n          break outer;\n        }\n      }\n      let minAngle = MathUtils.PI,\n        minX = l1 - a,\n        minDist = minX * minX,\n        minY = 0;\n      let maxAngle = 0,\n        maxX = l1 + a,\n        maxDist = maxX * maxX,\n        maxY = 0;\n      c = -a * l1 / (aa - bb);\n      if (c >= -1 && c <= 1) {\n        c = Math.acos(c);\n        x = a * Math.cos(c) + l1;\n        y = b * Math.sin(c);\n        d = x * x + y * y;\n        if (d < minDist) {\n          minAngle = c;\n          minDist = d;\n          minX = x;\n          minY = y;\n        }\n        if (d > maxDist) {\n          maxAngle = c;\n          maxDist = d;\n          maxX = x;\n          maxY = y;\n        }\n      }\n      if (dd <= (minDist + maxDist) * 0.5) {\n        a1 = ta - Math.atan2(minY * bendDir, minX);\n        a2 = minAngle * bendDir;\n      } else {\n        a1 = ta - Math.atan2(maxY * bendDir, maxX);\n        a2 = maxAngle * bendDir;\n      }\n    }\n    let os = Math.atan2(cy, cx) * s2;\n    let rotation = parent.arotation;\n    a1 = (a1 - os) * MathUtils.radDeg + os1 - rotation;\n    if (a1 > 180) a1 -= 360;else if (a1 < -180)\n      //\n      a1 += 360;\n    parent.updateWorldTransformWith(px, py, rotation + a1 * alpha, sx, sy, 0, 0);\n    rotation = child.arotation;\n    a2 = ((a2 + os) * MathUtils.radDeg - child.ashearX) * s2 + os2 - rotation;\n    if (a2 > 180) a2 -= 360;else if (a2 < -180)\n      //\n      a2 += 360;\n    child.updateWorldTransformWith(cx, cy, rotation + a2 * alpha, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n  }\n}","map":{"version":3,"names":["TransformMode","MathUtils","IkConstraint","constructor","data","skeleton","_defineProperty","Error","mix","softness","bendDirection","compress","stretch","bones","Array","i","length","bone","findBone","name","push","target","isActive","active","update","apply1","worldX","worldY","uniform","apply2","targetX","targetY","alpha","p","parent","pa","a","pb","b","pc","c","pd","d","rotationIK","ashearX","arotation","tx","ty","transformMode","OnlyTranslation","signum","scaleX","scaleY","NoRotationOrReflection","s","Math","abs","max","sa","sc","atan2","radDeg","x","y","ax","ay","ascaleX","sx","sy","ascaleY","NoScale","NoScaleOrReflection","dd","sqrt","updateWorldTransformWith","ashearY","child","bendDir","px","py","psx","psy","csx","os1","os2","s2","cx","cy","cwx","cwy","u","pp","id","dx","dy","l1","l2","a1","a2","td","sd","min","outer","cos","PI","acos","sin","aa","bb","ta","c1","c2","q","r0","r1","r","minAngle","minX","minDist","minY","maxAngle","maxX","maxDist","maxY","os","rotation"],"sources":["../src/IkConstraint.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAASA,aAAa,QAAQ,eAAe;AAI7C,SAASC,SAAS,QAAQ,YAAY;AAEtC;;;;AAIA,OAAM,MAAOC,YAAY;EA2BxBC,YAAaC,IAAsB,EAAEC,QAAkB;IA1BvD;IAAAC,eAAA;IAGA;IAAAA,eAAA;IAGA;IAAAA,eAAA;IAGA;IAAAA,eAAA,wBACgB,CAAC;IAEjB;IAAAA,eAAA,mBACW,KAAK;IAEhB;;IAAAA,eAAA,kBAEU,KAAK;IAEf;IAAAA,eAAA,cACM,CAAC;IAEP;IAAAA,eAAA,mBACW,CAAC;IAAAA,eAAA,iBACH,KAAK;IAGb,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIG,KAAK,CAAC,sBAAsB,CAAC;IAClD,IAAI,CAACF,QAAQ,EAAE,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;IAC1D,IAAI,CAACH,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACI,GAAG,GAAGJ,IAAI,CAACI,GAAG;IACnB,IAAI,CAACC,QAAQ,GAAGL,IAAI,CAACK,QAAQ;IAC7B,IAAI,CAACC,aAAa,GAAGN,IAAI,CAACM,aAAa;IACvC,IAAI,CAACC,QAAQ,GAAGP,IAAI,CAACO,QAAQ;IAC7B,IAAI,CAACC,OAAO,GAAGR,IAAI,CAACQ,OAAO;IAE3B,IAAI,CAACC,KAAK,GAAG,IAAIC,KAAK,EAAQ;IAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,CAACS,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAC3C,IAAIE,IAAI,GAAGZ,QAAQ,CAACa,QAAQ,CAACd,IAAI,CAACS,KAAK,CAACE,CAAC,CAAC,CAACI,IAAI,CAAC;MAChD,IAAI,CAACF,IAAI,EAAE,MAAM,IAAIV,KAAK,CAAC,sBAAsBH,IAAI,CAACS,KAAK,CAACE,CAAC,CAAC,CAACI,IAAI,EAAE,CAAC;MACtE,IAAI,CAACN,KAAK,CAACO,IAAI,CAACH,IAAI,CAAC;;IAEtB,IAAII,MAAM,GAAGhB,QAAQ,CAACa,QAAQ,CAACd,IAAI,CAACiB,MAAM,CAACF,IAAI,CAAC;IAChD,IAAI,CAACE,MAAM,EAAE,MAAM,IAAId,KAAK,CAAC,sBAAsBH,IAAI,CAACiB,MAAM,CAACF,IAAI,EAAE,CAAC;IACtE,IAAI,CAACE,MAAM,GAAGA,MAAM;EACrB;EAEAC,QAAQA,CAAA;IACP,OAAO,IAAI,CAACC,MAAM;EACnB;EAEAC,MAAMA,CAAA;IACL,IAAI,IAAI,CAAChB,GAAG,IAAI,CAAC,EAAE;IACnB,IAAIa,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIR,KAAK,GAAG,IAAI,CAACA,KAAK;IACtB,QAAQA,KAAK,CAACG,MAAM;MACnB,KAAK,CAAC;QACL,IAAI,CAACS,MAAM,CAACZ,KAAK,CAAC,CAAC,CAAC,EAAEQ,MAAM,CAACK,MAAM,EAAEL,MAAM,CAACM,MAAM,EAAE,IAAI,CAAChB,QAAQ,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACR,IAAI,CAACwB,OAAO,EAAE,IAAI,CAACpB,GAAG,CAAC;QAC7G;MACD,KAAK,CAAC;QACL,IAAI,CAACqB,MAAM,CAAChB,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEQ,MAAM,CAACK,MAAM,EAAEL,MAAM,CAACM,MAAM,EAAE,IAAI,CAACjB,aAAa,EAAE,IAAI,CAACE,OAAO,EAAE,IAAI,CAACR,IAAI,CAACwB,OAAO,EAAE,IAAI,CAACnB,QAAQ,EAAE,IAAI,CAACD,GAAG,CAAC;QAC3I;;EAEH;EAEA;EACAiB,MAAMA,CAAER,IAAU,EAAEa,OAAe,EAAEC,OAAe,EAAEpB,QAAiB,EAAEC,OAAgB,EAAEgB,OAAgB,EAAEI,KAAa;IACzH,IAAIC,CAAC,GAAGhB,IAAI,CAACiB,MAAM;IACnB,IAAI,CAACD,CAAC,EAAE,MAAM,IAAI1B,KAAK,CAAC,2BAA2B,CAAC;IACpD,IAAI4B,EAAE,GAAGF,CAAC,CAACG,CAAC;MAAEC,EAAE,GAAGJ,CAAC,CAACK,CAAC;MAAEC,EAAE,GAAGN,CAAC,CAACO,CAAC;MAAEC,EAAE,GAAGR,CAAC,CAACS,CAAC;IAC1C,IAAIC,UAAU,GAAG,CAAC1B,IAAI,CAAC2B,OAAO,GAAG3B,IAAI,CAAC4B,SAAS;MAAEC,EAAE,GAAG,CAAC;MAAEC,EAAE,GAAG,CAAC;IAE/D,QAAQ9B,IAAI,CAACb,IAAI,CAAC4C,aAAa;MAC9B,KAAKhD,aAAa,CAACiD,eAAe;QACjCH,EAAE,GAAG,CAAChB,OAAO,GAAGb,IAAI,CAACS,MAAM,IAAIzB,SAAS,CAACiD,MAAM,CAACjC,IAAI,CAACZ,QAAQ,CAAC8C,MAAM,CAAC;QACrEJ,EAAE,GAAG,CAAChB,OAAO,GAAGd,IAAI,CAACU,MAAM,IAAI1B,SAAS,CAACiD,MAAM,CAACjC,IAAI,CAACZ,QAAQ,CAAC+C,MAAM,CAAC;QACrE;MACD,KAAKpD,aAAa,CAACqD,sBAAsB;QACxC,IAAIC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACrB,EAAE,GAAGM,EAAE,GAAGJ,EAAE,GAAGE,EAAE,CAAC,GAAGgB,IAAI,CAACE,GAAG,CAAC,MAAM,EAAEtB,EAAE,GAAGA,EAAE,GAAGI,EAAE,GAAGA,EAAE,CAAC;QACzE,IAAImB,EAAE,GAAGvB,EAAE,GAAGlB,IAAI,CAACZ,QAAQ,CAAC8C,MAAM;QAClC,IAAIQ,EAAE,GAAGpB,EAAE,GAAGtB,IAAI,CAACZ,QAAQ,CAAC+C,MAAM;QAClCf,EAAE,GAAG,CAACsB,EAAE,GAAGL,CAAC,GAAGrC,IAAI,CAACZ,QAAQ,CAAC8C,MAAM;QACnCV,EAAE,GAAGiB,EAAE,GAAGJ,CAAC,GAAGrC,IAAI,CAACZ,QAAQ,CAAC+C,MAAM;QAClCT,UAAU,IAAIY,IAAI,CAACK,KAAK,CAACD,EAAE,EAAED,EAAE,CAAC,GAAGzD,SAAS,CAAC4D,MAAM;MACpD;MACA;QACC,IAAIC,CAAC,GAAGhC,OAAO,GAAGG,CAAC,CAACP,MAAM;UAAEqC,CAAC,GAAGhC,OAAO,GAAGE,CAAC,CAACN,MAAM;QAClD,IAAIe,CAAC,GAAGP,EAAE,GAAGM,EAAE,GAAGJ,EAAE,GAAGE,EAAE;QACzB,IAAIgB,IAAI,CAACC,GAAG,CAACd,CAAC,CAAC,IAAI,MAAM,EAAE;UAC1BI,EAAE,GAAG,CAAC;UACNC,EAAE,GAAG,CAAC;SACN,MAAM;UACND,EAAE,GAAG,CAACgB,CAAC,GAAGrB,EAAE,GAAGsB,CAAC,GAAG1B,EAAE,IAAIK,CAAC,GAAGzB,IAAI,CAAC+C,EAAE;UACpCjB,EAAE,GAAG,CAACgB,CAAC,GAAG5B,EAAE,GAAG2B,CAAC,GAAGvB,EAAE,IAAIG,CAAC,GAAGzB,IAAI,CAACgD,EAAE;;;IAGvCtB,UAAU,IAAIY,IAAI,CAACK,KAAK,CAACb,EAAE,EAAED,EAAE,CAAC,GAAG7C,SAAS,CAAC4D,MAAM;IACnD,IAAI5C,IAAI,CAACiD,OAAO,GAAG,CAAC,EAAEvB,UAAU,IAAI,GAAG;IACvC,IAAIA,UAAU,GAAG,GAAG,EACnBA,UAAU,IAAI,GAAG,CAAC,KACd,IAAIA,UAAU,GAAG,CAAC,GAAG,EACzBA,UAAU,IAAI,GAAG;IAClB,IAAIwB,EAAE,GAAGlD,IAAI,CAACiD,OAAO;MAAEE,EAAE,GAAGnD,IAAI,CAACoD,OAAO;IACxC,IAAI1D,QAAQ,IAAIC,OAAO,EAAE;MACxB,QAAQK,IAAI,CAACb,IAAI,CAAC4C,aAAa;QAC9B,KAAKhD,aAAa,CAACsE,OAAO;QAC1B,KAAKtE,aAAa,CAACuE,mBAAmB;UACrCzB,EAAE,GAAGhB,OAAO,GAAGb,IAAI,CAACS,MAAM;UAC1BqB,EAAE,GAAGhB,OAAO,GAAGd,IAAI,CAACU,MAAM;;MAE5B,IAAIW,CAAC,GAAGrB,IAAI,CAACb,IAAI,CAACY,MAAM,GAAGmD,EAAE;QAAEK,EAAE,GAAGjB,IAAI,CAACkB,IAAI,CAAC3B,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;MAChE,IAAKpC,QAAQ,IAAI6D,EAAE,GAAGlC,CAAC,IAAM1B,OAAO,IAAI4D,EAAE,GAAGlC,CAAC,IAAKA,CAAC,GAAG,MAAM,EAAE;QAC9D,IAAIgB,CAAC,GAAG,CAACkB,EAAE,GAAGlC,CAAC,GAAG,CAAC,IAAIN,KAAK,GAAG,CAAC;QAChCmC,EAAE,IAAIb,CAAC;QACP,IAAI1B,OAAO,EAAEwC,EAAE,IAAId,CAAC;;;IAGtBrC,IAAI,CAACyD,wBAAwB,CAACzD,IAAI,CAAC+C,EAAE,EAAE/C,IAAI,CAACgD,EAAE,EAAEhD,IAAI,CAAC4B,SAAS,GAAGF,UAAU,GAAGX,KAAK,EAAEmC,EAAE,EAAEC,EAAE,EAAEnD,IAAI,CAAC2B,OAAO,EACxG3B,IAAI,CAAC0D,OAAO,CAAC;EACf;EAEA;;EAEA9C,MAAMA,CAAEK,MAAY,EAAE0C,KAAW,EAAE9C,OAAe,EAAEC,OAAe,EAAE8C,OAAe,EAAEjE,OAAgB,EAAEgB,OAAgB,EAAEnB,QAAgB,EAAEuB,KAAa;IACxJ,IAAI8C,EAAE,GAAG5C,MAAM,CAAC8B,EAAE;MAAEe,EAAE,GAAG7C,MAAM,CAAC+B,EAAE;MAAEe,GAAG,GAAG9C,MAAM,CAACgC,OAAO;MAAEe,GAAG,GAAG/C,MAAM,CAACmC,OAAO;MAAEF,EAAE,GAAGa,GAAG;MAAEZ,EAAE,GAAGa,GAAG;MAAEC,GAAG,GAAGN,KAAK,CAACV,OAAO;IACvH,IAAIiB,GAAG,GAAG,CAAC;MAAEC,GAAG,GAAG,CAAC;MAAEC,EAAE,GAAG,CAAC;IAC5B,IAAIL,GAAG,GAAG,CAAC,EAAE;MACZA,GAAG,GAAG,CAACA,GAAG;MACVG,GAAG,GAAG,GAAG;MACTE,EAAE,GAAG,CAAC,CAAC;KACP,MAAM;MACNF,GAAG,GAAG,CAAC;MACPE,EAAE,GAAG,CAAC;;IAEP,IAAIJ,GAAG,GAAG,CAAC,EAAE;MACZA,GAAG,GAAG,CAACA,GAAG;MACVI,EAAE,GAAG,CAACA,EAAE;;IAET,IAAIH,GAAG,GAAG,CAAC,EAAE;MACZA,GAAG,GAAG,CAACA,GAAG;MACVE,GAAG,GAAG,GAAG;KACT,MACAA,GAAG,GAAG,CAAC;IACR,IAAIE,EAAE,GAAGV,KAAK,CAACZ,EAAE;MAAEuB,EAAE,GAAG,CAAC;MAAEC,GAAG,GAAG,CAAC;MAAEC,GAAG,GAAG,CAAC;MAAErD,CAAC,GAAGF,MAAM,CAACE,CAAC;MAAEE,CAAC,GAAGJ,MAAM,CAACI,CAAC;MAAEE,CAAC,GAAGN,MAAM,CAACM,CAAC;MAAEE,CAAC,GAAGR,MAAM,CAACQ,CAAC;IACnG,IAAIgD,CAAC,GAAGnC,IAAI,CAACC,GAAG,CAACwB,GAAG,GAAGC,GAAG,CAAC,IAAI,MAAM;IACrC,IAAI,CAACS,CAAC,IAAI9E,OAAO,EAAE;MAClB2E,EAAE,GAAG,CAAC;MACNC,GAAG,GAAGpD,CAAC,GAAGkD,EAAE,GAAGpD,MAAM,CAACR,MAAM;MAC5B+D,GAAG,GAAGjD,CAAC,GAAG8C,EAAE,GAAGpD,MAAM,CAACP,MAAM;KAC5B,MAAM;MACN4D,EAAE,GAAGX,KAAK,CAACX,EAAE;MACbuB,GAAG,GAAGpD,CAAC,GAAGkD,EAAE,GAAGhD,CAAC,GAAGiD,EAAE,GAAGrD,MAAM,CAACR,MAAM;MACrC+D,GAAG,GAAGjD,CAAC,GAAG8C,EAAE,GAAG5C,CAAC,GAAG6C,EAAE,GAAGrD,MAAM,CAACP,MAAM;;IAEtC,IAAIgE,EAAE,GAAGzD,MAAM,CAACA,MAAM;IACtB,IAAI,CAACyD,EAAE,EAAE,MAAM,IAAIpF,KAAK,CAAC,sCAAsC,CAAC;IAChE6B,CAAC,GAAGuD,EAAE,CAACvD,CAAC;IACRE,CAAC,GAAGqD,EAAE,CAACrD,CAAC;IACRE,CAAC,GAAGmD,EAAE,CAACnD,CAAC;IACRE,CAAC,GAAGiD,EAAE,CAACjD,CAAC;IACR,IAAIkD,EAAE,GAAGxD,CAAC,GAAGM,CAAC,GAAGJ,CAAC,GAAGE,CAAC;MAAEsB,CAAC,GAAG0B,GAAG,GAAGG,EAAE,CAACjE,MAAM;MAAEqC,CAAC,GAAG0B,GAAG,GAAGE,EAAE,CAAChE,MAAM;IAChEiE,EAAE,GAAGrC,IAAI,CAACC,GAAG,CAACoC,EAAE,CAAC,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,EAAE;IACxC,IAAIC,EAAE,GAAG,CAAC/B,CAAC,GAAGpB,CAAC,GAAGqB,CAAC,GAAGzB,CAAC,IAAIsD,EAAE,GAAGd,EAAE;MAAEgB,EAAE,GAAG,CAAC/B,CAAC,GAAG3B,CAAC,GAAG0B,CAAC,GAAGtB,CAAC,IAAIoD,EAAE,GAAGb,EAAE;IAClE,IAAIgB,EAAE,GAAGxC,IAAI,CAACkB,IAAI,CAACoB,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;MAAEE,EAAE,GAAGpB,KAAK,CAACxE,IAAI,CAACY,MAAM,GAAGkE,GAAG;MAAEe,EAAE;MAAEC,EAAE;IAC3E,IAAIH,EAAE,GAAG,MAAM,EAAE;MAChB,IAAI,CAACtE,MAAM,CAACS,MAAM,EAAEJ,OAAO,EAAEC,OAAO,EAAE,KAAK,EAAEnB,OAAO,EAAE,KAAK,EAAEoB,KAAK,CAAC;MACnE4C,KAAK,CAACF,wBAAwB,CAACY,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAEX,KAAK,CAACV,OAAO,EAAEU,KAAK,CAACP,OAAO,EAAEO,KAAK,CAAChC,OAAO,EAAEgC,KAAK,CAACD,OAAO,CAAC;MACrG;;IAEDb,CAAC,GAAGhC,OAAO,GAAG6D,EAAE,CAACjE,MAAM;IACvBqC,CAAC,GAAGhC,OAAO,GAAG4D,EAAE,CAAChE,MAAM;IACvB,IAAImB,EAAE,GAAG,CAACgB,CAAC,GAAGpB,CAAC,GAAGqB,CAAC,GAAGzB,CAAC,IAAIsD,EAAE,GAAGd,EAAE;MAAE/B,EAAE,GAAG,CAACgB,CAAC,GAAG3B,CAAC,GAAG0B,CAAC,GAAGtB,CAAC,IAAIoD,EAAE,GAAGb,EAAE;IAClE,IAAIP,EAAE,GAAG1B,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;IAC1B,IAAItC,QAAQ,IAAI,CAAC,EAAE;MAClBA,QAAQ,IAAIuE,GAAG,IAAIE,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG;MACjC,IAAIiB,EAAE,GAAG5C,IAAI,CAACkB,IAAI,CAACD,EAAE,CAAC;QAAE4B,EAAE,GAAGD,EAAE,GAAGJ,EAAE,GAAGC,EAAE,GAAGhB,GAAG,GAAGvE,QAAQ;MAC1D,IAAI2F,EAAE,GAAG,CAAC,EAAE;QACX,IAAInE,CAAC,GAAGsB,IAAI,CAAC8C,GAAG,CAAC,CAAC,EAAED,EAAE,IAAI3F,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5CwB,CAAC,GAAG,CAACmE,EAAE,GAAG3F,QAAQ,IAAI,CAAC,GAAGwB,CAAC,GAAGA,CAAC,CAAC,IAAIkE,EAAE;QACtCrD,EAAE,IAAIb,CAAC,GAAGa,EAAE;QACZC,EAAE,IAAId,CAAC,GAAGc,EAAE;QACZyB,EAAE,GAAG1B,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;;;IAGxBuD,KAAK,EACL,IAAIZ,CAAC,EAAE;MACNM,EAAE,IAAIhB,GAAG;MACT,IAAIuB,GAAG,GAAG,CAAC/B,EAAE,GAAGuB,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,KAAK,CAAC,GAAGD,EAAE,GAAGC,EAAE,CAAC;MAClD,IAAIO,GAAG,GAAG,CAAC,CAAC,EAAE;QACbA,GAAG,GAAG,CAAC,CAAC;QACRL,EAAE,GAAG3C,IAAI,CAACiD,EAAE,GAAG3B,OAAO;OACtB,MAAM,IAAI0B,GAAG,GAAG,CAAC,EAAE;QACnBA,GAAG,GAAG,CAAC;QACPL,EAAE,GAAG,CAAC;QACN,IAAItF,OAAO,EAAE;UACZwB,CAAC,GAAG,CAACmB,IAAI,CAACkB,IAAI,CAACD,EAAE,CAAC,IAAIuB,EAAE,GAAGC,EAAE,CAAC,GAAG,CAAC,IAAIhE,KAAK,GAAG,CAAC;UAC/CmC,EAAE,IAAI/B,CAAC;UACP,IAAIR,OAAO,EAAEwC,EAAE,IAAIhC,CAAC;;OAErB,MACA8D,EAAE,GAAG3C,IAAI,CAACkD,IAAI,CAACF,GAAG,CAAC,GAAG1B,OAAO;MAC9BzC,CAAC,GAAG2D,EAAE,GAAGC,EAAE,GAAGO,GAAG;MACjBjE,CAAC,GAAG0D,EAAE,GAAGzC,IAAI,CAACmD,GAAG,CAACR,EAAE,CAAC;MACrBD,EAAE,GAAG1C,IAAI,CAACK,KAAK,CAACb,EAAE,GAAGX,CAAC,GAAGU,EAAE,GAAGR,CAAC,EAAEQ,EAAE,GAAGV,CAAC,GAAGW,EAAE,GAAGT,CAAC,CAAC;KACjD,MAAM;MACNF,CAAC,GAAG4C,GAAG,GAAGgB,EAAE;MACZ1D,CAAC,GAAG2C,GAAG,GAAGe,EAAE;MACZ,IAAIW,EAAE,GAAGvE,CAAC,GAAGA,CAAC;QAAEwE,EAAE,GAAGtE,CAAC,GAAGA,CAAC;QAAEuE,EAAE,GAAGtD,IAAI,CAACK,KAAK,CAACb,EAAE,EAAED,EAAE,CAAC;MACnDN,CAAC,GAAGoE,EAAE,GAAGb,EAAE,GAAGA,EAAE,GAAGY,EAAE,GAAGnC,EAAE,GAAGmC,EAAE,GAAGC,EAAE;MACpC,IAAIE,EAAE,GAAG,CAAC,CAAC,GAAGF,EAAE,GAAGb,EAAE;QAAEgB,EAAE,GAAGH,EAAE,GAAGD,EAAE;MACnCjE,CAAC,GAAGoE,EAAE,GAAGA,EAAE,GAAG,CAAC,GAAGC,EAAE,GAAGvE,CAAC;MACxB,IAAIE,CAAC,IAAI,CAAC,EAAE;QACX,IAAIsE,CAAC,GAAGzD,IAAI,CAACkB,IAAI,CAAC/B,CAAC,CAAC;QACpB,IAAIoE,EAAE,GAAG,CAAC,EAAEE,CAAC,GAAG,CAACA,CAAC;QAClBA,CAAC,GAAG,EAAEF,EAAE,GAAGE,CAAC,CAAC,GAAG,GAAG;QACnB,IAAIC,EAAE,GAAGD,CAAC,GAAGD,EAAE;UAAEG,EAAE,GAAG1E,CAAC,GAAGwE,CAAC;QAC3B,IAAIG,CAAC,GAAG5D,IAAI,CAACC,GAAG,CAACyD,EAAE,CAAC,GAAG1D,IAAI,CAACC,GAAG,CAAC0D,EAAE,CAAC,GAAGD,EAAE,GAAGC,EAAE;QAC7C,IAAIC,CAAC,GAAGA,CAAC,IAAI3C,EAAE,EAAE;UAChBT,CAAC,GAAGR,IAAI,CAACkB,IAAI,CAACD,EAAE,GAAG2C,CAAC,GAAGA,CAAC,CAAC,GAAGtC,OAAO;UACnCoB,EAAE,GAAGY,EAAE,GAAGtD,IAAI,CAACK,KAAK,CAACG,CAAC,EAAEoD,CAAC,CAAC;UAC1BjB,EAAE,GAAG3C,IAAI,CAACK,KAAK,CAACG,CAAC,GAAGkB,GAAG,EAAE,CAACkC,CAAC,GAAGpB,EAAE,IAAIf,GAAG,CAAC;UACxC,MAAMsB,KAAK;;;MAGb,IAAIc,QAAQ,GAAGnH,SAAS,CAACuG,EAAE;QAAEa,IAAI,GAAGtB,EAAE,GAAG3D,CAAC;QAAEkF,OAAO,GAAGD,IAAI,GAAGA,IAAI;QAAEE,IAAI,GAAG,CAAC;MAC3E,IAAIC,QAAQ,GAAG,CAAC;QAAEC,IAAI,GAAG1B,EAAE,GAAG3D,CAAC;QAAEsF,OAAO,GAAGD,IAAI,GAAGA,IAAI;QAAEE,IAAI,GAAG,CAAC;MAChEnF,CAAC,GAAG,CAACJ,CAAC,GAAG2D,EAAE,IAAIY,EAAE,GAAGC,EAAE,CAAC;MACvB,IAAIpE,CAAC,IAAI,CAAC,CAAC,IAAIA,CAAC,IAAI,CAAC,EAAE;QACtBA,CAAC,GAAGe,IAAI,CAACkD,IAAI,CAACjE,CAAC,CAAC;QAChBsB,CAAC,GAAG1B,CAAC,GAAGmB,IAAI,CAACgD,GAAG,CAAC/D,CAAC,CAAC,GAAGuD,EAAE;QACxBhC,CAAC,GAAGzB,CAAC,GAAGiB,IAAI,CAACmD,GAAG,CAAClE,CAAC,CAAC;QACnBE,CAAC,GAAGoB,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC;QACjB,IAAIrB,CAAC,GAAG4E,OAAO,EAAE;UAChBF,QAAQ,GAAG5E,CAAC;UACZ8E,OAAO,GAAG5E,CAAC;UACX2E,IAAI,GAAGvD,CAAC;UACRyD,IAAI,GAAGxD,CAAC;;QAET,IAAIrB,CAAC,GAAGgF,OAAO,EAAE;UAChBF,QAAQ,GAAGhF,CAAC;UACZkF,OAAO,GAAGhF,CAAC;UACX+E,IAAI,GAAG3D,CAAC;UACR6D,IAAI,GAAG5D,CAAC;;;MAGV,IAAIS,EAAE,IAAI,CAAC8C,OAAO,GAAGI,OAAO,IAAI,GAAG,EAAE;QACpCzB,EAAE,GAAGY,EAAE,GAAGtD,IAAI,CAACK,KAAK,CAAC2D,IAAI,GAAG1C,OAAO,EAAEwC,IAAI,CAAC;QAC1CnB,EAAE,GAAGkB,QAAQ,GAAGvC,OAAO;OACvB,MAAM;QACNoB,EAAE,GAAGY,EAAE,GAAGtD,IAAI,CAACK,KAAK,CAAC+D,IAAI,GAAG9C,OAAO,EAAE4C,IAAI,CAAC;QAC1CvB,EAAE,GAAGsB,QAAQ,GAAG3C,OAAO;;;IAGzB,IAAI+C,EAAE,GAAGrE,IAAI,CAACK,KAAK,CAAC2B,EAAE,EAAED,EAAE,CAAC,GAAGD,EAAE;IAChC,IAAIwC,QAAQ,GAAG3F,MAAM,CAACW,SAAS;IAC/BoD,EAAE,GAAG,CAACA,EAAE,GAAG2B,EAAE,IAAI3H,SAAS,CAAC4D,MAAM,GAAGsB,GAAG,GAAG0C,QAAQ;IAClD,IAAI5B,EAAE,GAAG,GAAG,EACXA,EAAE,IAAI,GAAG,CAAC,KACN,IAAIA,EAAE,GAAG,CAAC,GAAG;MAAE;MACnBA,EAAE,IAAI,GAAG;IACV/D,MAAM,CAACwC,wBAAwB,CAACI,EAAE,EAAEC,EAAE,EAAE8C,QAAQ,GAAG5B,EAAE,GAAGjE,KAAK,EAAEmC,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5EyD,QAAQ,GAAGjD,KAAK,CAAC/B,SAAS;IAC1BqD,EAAE,GAAG,CAAC,CAACA,EAAE,GAAG0B,EAAE,IAAI3H,SAAS,CAAC4D,MAAM,GAAGe,KAAK,CAAChC,OAAO,IAAIyC,EAAE,GAAGD,GAAG,GAAGyC,QAAQ;IACzE,IAAI3B,EAAE,GAAG,GAAG,EACXA,EAAE,IAAI,GAAG,CAAC,KACN,IAAIA,EAAE,GAAG,CAAC,GAAG;MAAE;MACnBA,EAAE,IAAI,GAAG;IACVtB,KAAK,CAACF,wBAAwB,CAACY,EAAE,EAAEC,EAAE,EAAEsC,QAAQ,GAAG3B,EAAE,GAAGlE,KAAK,EAAE4C,KAAK,CAACV,OAAO,EAAEU,KAAK,CAACP,OAAO,EAAEO,KAAK,CAAChC,OAAO,EAAEgC,KAAK,CAACD,OAAO,CAAC;EAC1H","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}