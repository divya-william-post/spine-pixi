{"ast":null,"code":"export async function initSpine() {\n  var app = new PIXI.Application();\n  await app.init({\n    width: window.innerWidth,\n    height: window.innerHeight,\n    resolution: window.devicePixelRatio || 1,\n    autoDensity: true,\n    resizeTo: window,\n    backgroundColor: 0x2c3e50,\n    hello: true\n  });\n  document.body.appendChild(app.view);\n\n  // Pre-load the skeleton data and atlas. You can also load .json skeleton data.\n  PIXI.Assets.add({\n    alias: \"spineboyData\",\n    src: \"./assets/spineboy-pro.skel\"\n  });\n  PIXI.Assets.add({\n    alias: \"spineboyAtlas\",\n    src: \"./assets/spineboy-pma.atlas\"\n  });\n  await PIXI.Assets.load([\"spineboyData\", \"spineboyAtlas\"]);\n\n  // Create the spine display object\n  const spineboy = spine.Spine.from({\n    skeleton: \"spineboyData\",\n    atlas: \"spineboyAtlas\",\n    scale: 0.5\n  });\n\n  // Set the default mix time to use when transitioning\n  // from one animation to the next.\n  spineboy.state.data.defaultMix = 0.2;\n\n  // Center the spine object on screen.\n  spineboy.x = window.innerWidth / 2;\n  spineboy.y = window.innerHeight / 2 + spineboy.getBounds().height / 2;\n\n  // Set animation \"run\" on track 0, looped.\n  spineboy.state.setAnimation(0, \"run\", true);\n\n  // Add the display object to the stage.\n  app.stage.addChild(spineboy);\n}","map":{"version":3,"names":["initSpine","app","PIXI","Application","init","width","window","innerWidth","height","innerHeight","resolution","devicePixelRatio","autoDensity","resizeTo","backgroundColor","hello","document","body","appendChild","view","Assets","add","alias","src","load","spineboy","spine","Spine","from","skeleton","atlas","scale","state","data","defaultMix","x","y","getBounds","setAnimation","stage","addChild"],"sources":["/Users/divya/Documents/vue-2024-spine/vue-20240spine/src/spine.js"],"sourcesContent":["export async function initSpine () {\n    var app = new PIXI.Application();\n    await app.init({\n      width: window.innerWidth,\n      height: window.innerHeight,\n      resolution: window.devicePixelRatio || 1,\n      autoDensity: true,\n      resizeTo: window,\n      backgroundColor: 0x2c3e50,\n      hello: true,\n    })\n    document.body.appendChild(app.view);\n\n    // Pre-load the skeleton data and atlas. You can also load .json skeleton data.\n    PIXI.Assets.add({alias: \"spineboyData\", src: \"./assets/spineboy-pro.skel\"});\n    PIXI.Assets.add({alias: \"spineboyAtlas\", src: \"./assets/spineboy-pma.atlas\"});\n    await PIXI.Assets.load([\"spineboyData\", \"spineboyAtlas\"]);\n\n    // Create the spine display object\n    const spineboy = spine.Spine.from({skeleton: \"spineboyData\", atlas: \"spineboyAtlas\", \n      scale: 0.5,\n    });\n\n    // Set the default mix time to use when transitioning\n    // from one animation to the next.\n    spineboy.state.data.defaultMix = 0.2;\n\n    // Center the spine object on screen.\n    spineboy.x = window.innerWidth / 2;\n    spineboy.y = window.innerHeight / 2 + spineboy.getBounds().height / 2;\n\n    // Set animation \"run\" on track 0, looped.\n    spineboy.state.setAnimation(0, \"run\", true);\n\n    // Add the display object to the stage.\n    app.stage.addChild(spineboy);\n  }"],"mappings":"AAAA,OAAO,eAAeA,SAASA,CAAA,EAAI;EAC/B,IAAIC,GAAG,GAAG,IAAIC,IAAI,CAACC,WAAW,CAAC,CAAC;EAChC,MAAMF,GAAG,CAACG,IAAI,CAAC;IACbC,KAAK,EAAEC,MAAM,CAACC,UAAU;IACxBC,MAAM,EAAEF,MAAM,CAACG,WAAW;IAC1BC,UAAU,EAAEJ,MAAM,CAACK,gBAAgB,IAAI,CAAC;IACxCC,WAAW,EAAE,IAAI;IACjBC,QAAQ,EAAEP,MAAM;IAChBQ,eAAe,EAAE,QAAQ;IACzBC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACjB,GAAG,CAACkB,IAAI,CAAC;;EAEnC;EACAjB,IAAI,CAACkB,MAAM,CAACC,GAAG,CAAC;IAACC,KAAK,EAAE,cAAc;IAAEC,GAAG,EAAE;EAA4B,CAAC,CAAC;EAC3ErB,IAAI,CAACkB,MAAM,CAACC,GAAG,CAAC;IAACC,KAAK,EAAE,eAAe;IAAEC,GAAG,EAAE;EAA6B,CAAC,CAAC;EAC7E,MAAMrB,IAAI,CAACkB,MAAM,CAACI,IAAI,CAAC,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;;EAEzD;EACA,MAAMC,QAAQ,GAAGC,KAAK,CAACC,KAAK,CAACC,IAAI,CAAC;IAACC,QAAQ,EAAE,cAAc;IAAEC,KAAK,EAAE,eAAe;IACjFC,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;EACA;EACAN,QAAQ,CAACO,KAAK,CAACC,IAAI,CAACC,UAAU,GAAG,GAAG;;EAEpC;EACAT,QAAQ,CAACU,CAAC,GAAG7B,MAAM,CAACC,UAAU,GAAG,CAAC;EAClCkB,QAAQ,CAACW,CAAC,GAAG9B,MAAM,CAACG,WAAW,GAAG,CAAC,GAAGgB,QAAQ,CAACY,SAAS,CAAC,CAAC,CAAC7B,MAAM,GAAG,CAAC;;EAErE;EACAiB,QAAQ,CAACO,KAAK,CAACM,YAAY,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;;EAE3C;EACArC,GAAG,CAACsC,KAAK,CAACC,QAAQ,CAACf,QAAQ,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}